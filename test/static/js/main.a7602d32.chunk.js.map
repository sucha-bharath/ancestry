{"version":3,"sources":["util/gedcom_util.ts","util/analytics.ts","util/date_util.ts","datasource/data_source.ts","changelog.tsx","util/age_util.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","topola.jpg","util/media.ts","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","menu/top_bar.tsx","menu/wikitree_menu.tsx","config.tsx","chart.tsx","datasource/wikitree.ts","app.tsx","index.tsx","util/error.ts","datasource/load_data.ts"],"names":["pointerToId","pointer","substring","length","idToIndiMap","data","map","Map","indis","forEach","indi","set","id","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","compareDates","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","has","title","startsWith","filterImage","convertGedcom","parseGedcom","json","gedcomEntriesToJson","TopolaError","chartData","getSoftware","sour","name","getName","person","names","filter","subEntry","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","analyticsEvent","action","window","gtag","DATE_QUALIFIERS","formatDate","date","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","dateElement","join","lowerCaseQualifier","formatMessage","defaultMessage","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","areDateRangesOverlapped","range1","range2","isValidDateOrRange","isDateRangeClosed","range","Date","DataSourceEnum","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","seenVersionDate","parse","slice","changes","process","split","notes","trim","release","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","WrappedImage","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","onLoad","onError","e","currentTarget","alt","src","filename","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","basic","size","closeIcon","Icon","color","onClose","onOpen","label","Label","attached","content","wrapped","MultilineText","lines","line","index","properties","target","eventSources","sources","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","event","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","render","Tab","Pane","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","type","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","eventNotes","toEvent","family","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","events","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","message","resolve","reject","PARENT_READY","parent","postMessage","READY","GEDCOM","loadGedcom","software","event_label","Promise","addEventListener","onMessage","getI18nMessage","error","code","args","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuType","MenuItem","newProps","menuType","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","initMultiLingualLunrWithoutTrimmer","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","languages","pipelineFunctions","searchPipelineFunctions","language","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","apply","searchPipeline","query","s","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","generation","noResultsMessage","placeholder","selectFirstResult","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","event_value","gedcomFile","file","loadFile","URL","createObjectURL","imageFileNames","keys","hash","md5","state","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","values","link","secondary","ScreenSize","WikiTreeMenu","wikiTreeId","setWikiTreeId","handleSelectId","standalone","enterId","preventDefault","wikitreeLogo","style","width","height","wikiTreeLink","rel","example1","example2","WikiTreeLoginMenu","username","getLoggedInUserName","returnUrl","navigateToLoginPage","tooltip","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onPrint","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","showWikiTreeMenus","wikiTreeLoginMenu","greaterThanOrEqual","inverted","at","icon","ChartColors","Ids","Sex","DEFALUT_CONFIG","COLOR_BY_GENERATION","SHOW","sex","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","v","k","ID_ARG","HIDE","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","onload","inlineImage","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","getElementsByTagName","all","loadImage","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","printChart","printWindow","top","left","contentDocument","write","close","setTimeout","contentWindow","print","parentNode","removeChild","body","appendChild","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","startIndi","selection","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","hideIds","hideSex","WIKITREE_APP_ID","PRIVATE_ID_PREFIX","getSessionStorageItem","sessionStorage","setSessionStorageItem","getApiOptions","handleCors","appId","apiUrl","getAncestors","cacheKey","cachedData","JSON","getAncestorsApi","stringify","getRelatives","keysToFetch","getRelativesApi","getChildren","getSpouses","Name","concat","logInIfNeeded","authcode","clientLogin","clear","getFirstPerson","getSpouseKeys","Spouses","getAllAncestors","ancestors","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","getAllDescendants","everyone","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","loadData","hostname","firstPerson","spouseKeys","allAncestors","allDescendants","convertIndis","families","getFamilyId","getSet","spouse","getFamilies","hideId","FirstName","RealName","LastNameAtBirth","famc","Gender","BirthDate","BirthLocation","BirthDateDecade","parseDate","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","Photo","convertPerson","convertFams","idToName","spouses","wife","familySpouses","child","marriage_date","marriage_location","parsedDate","loadWikiTree","personNames","convertPersonNames","fullSizePhotoUrls","path","buildGedcom","spouse1","spouse2","getMarriedName","LastNameCurrent","nameParts","spousePersonNamePart","personNamePart","name1","name2","StringUtils","compareSimilarityPercent","married","aka","LastNameOther","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","nameToGedcom","level","eventToGedcom","imageToGedcom","fullSizePhotoUrl","pop","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","Set","AppState","WikiTreeDataSource","spec","staticUrl","ErrorMessage","ErrorPopup","Portal","onDismiss","getParamFromSearch","getArguments","chartTypes","embedded","sourceSpec","GEDCOM_URL","parsedGen","isNaN","showSidePanel","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setShowWikiTreeMenus","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","toggleDetails","shouldHideIds","shouldHideSex","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","oldSouce","UPLOADED","WIKITREE","EMBEDDED","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","loadMoreFromWikitree","exact","Error","prepareData","cacheId","serializedData","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText"],"mappings":"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","file":"static/js/main.a7602d32.chunk.js","sourcesContent":["import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\r\nimport {TopolaError} from './error';\r\nimport {\r\n  gedcomEntriesToJson,\r\n  JsonFam,\r\n  JsonGedcomData,\r\n  JsonImage,\r\n  JsonIndi,\r\n} from 'topola';\r\nimport {compareDates} from './date_util';\r\n\r\nexport interface GedcomData {\r\n  /** The HEAD entry. */\r\n  head: GedcomEntry;\r\n  /** INDI entries mapped by id. */\r\n  indis: {[key: string]: GedcomEntry};\r\n  /** FAM entries mapped by id. */\r\n  fams: {[key: string]: GedcomEntry};\r\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\r\n  other: {[key: string]: GedcomEntry};\r\n}\r\n\r\nexport interface TopolaData {\r\n  chartData: JsonGedcomData;\r\n  gedcom: GedcomData;\r\n}\r\n\r\n/**\r\n * Returns the identifier extracted from a pointer string.\r\n * E.g. '@I123@' -> 'I123'\r\n */\r\nexport function pointerToId(pointer: string): string {\r\n  return pointer.substring(1, pointer.length - 1);\r\n}\r\n\r\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\r\n  const map = new Map<string, JsonIndi>();\r\n  data.indis.forEach((indi) => {\r\n    map.set(indi.id, indi);\r\n  });\r\n  return map;\r\n}\r\n\r\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\r\n  const map = new Map<string, JsonFam>();\r\n  data.fams.forEach((fam) => {\r\n    map.set(fam.id, fam);\r\n  });\r\n  return map;\r\n}\r\n\r\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\r\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\r\n  const indis: {[key: string]: GedcomEntry} = {};\r\n  const fams: {[key: string]: GedcomEntry} = {};\r\n  const other: {[key: string]: GedcomEntry} = {};\r\n  entries.forEach((entry) => {\r\n    if (entry.tag === 'INDI') {\r\n      indis[pointerToId(entry.pointer)] = entry;\r\n    } else if (entry.tag === 'FAM') {\r\n      fams[pointerToId(entry.pointer)] = entry;\r\n    } else if (entry.pointer) {\r\n      other[pointerToId(entry.pointer)] = entry;\r\n    }\r\n  });\r\n  return {head, indis, fams, other};\r\n}\r\n\r\nfunction strcmp(a: string, b: string) {\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/** Birth date comparator for individuals. */\r\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\r\n  const indiMap = idToIndiMap(gedcom);\r\n\r\n  return (indiId1: string, indiId2: string) => {\r\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\r\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\r\n    return (\r\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\r\n      strcmp(indiId1, indiId2)\r\n    );\r\n  };\r\n}\r\n\r\n/** Marriage date comparator for families. */\r\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\r\n  const famMap = idToFamMap(gedcom);\r\n\r\n  return (famId1: string, famId2: string) => {\r\n    const fam1: JsonFam | undefined = famMap.get(famId1);\r\n    const fam2: JsonFam | undefined = famMap.get(famId2);\r\n    return (\r\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\r\n      strcmp(famId1, famId2)\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * Sorts children by birth date in the given family.\r\n * Does not modify the input objects.\r\n */\r\nfunction sortFamilyChildren(\r\n  fam: JsonFam,\r\n  comparator: (id1: string, id2: string) => number,\r\n): JsonFam {\r\n  if (!fam.children) {\r\n    return fam;\r\n  }\r\n  const newChildren = fam.children.sort(comparator);\r\n  return Object.assign({}, fam, {children: newChildren});\r\n}\r\n\r\n/**\r\n * Sorts children by birth date.\r\n * Does not modify the input object.\r\n */\r\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\r\n  const comparator = birthDatesComparator(gedcom);\r\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\r\n  return Object.assign({}, gedcom, {fams: newFams});\r\n}\r\n\r\n/**\r\n * Sorts spouses by marriage date.\r\n * Does not modify the input objects.\r\n */\r\nfunction sortIndiSpouses(\r\n  indi: JsonIndi,\r\n  comparator: (id1: string, id2: string) => number,\r\n): JsonFam {\r\n  if (!indi.fams) {\r\n    return indi;\r\n  }\r\n  const newFams = indi.fams.sort(comparator);\r\n  return Object.assign({}, indi, {fams: newFams});\r\n}\r\n\r\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\r\n  const comparator = marriageDatesComparator(gedcom);\r\n  const newIndis = gedcom.indis.map((indi) =>\r\n    sortIndiSpouses(indi, comparator),\r\n  );\r\n  return Object.assign({}, gedcom, {indis: newIndis});\r\n}\r\n\r\n/**\r\n * If the entry is a reference to a top-level entry, the referenced entry is\r\n * returned. Otherwise, returns the given entry unmodified.\r\n */\r\nexport function dereference(\r\n  entry: GedcomEntry,\r\n  gedcom: GedcomData,\r\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\r\n) {\r\n  if (entry.data) {\r\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\r\n    if (dereferenced) {\r\n      return dereferenced;\r\n    }\r\n  }\r\n  return entry;\r\n}\r\n\r\n/**\r\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\r\n * continuations with CONT and CONC.\r\n */\r\nexport function getData(entry: GedcomEntry) {\r\n  const result = [entry.data];\r\n  entry.tree.forEach((subentry) => {\r\n    if (subentry.tag === 'CONC' && subentry.data) {\r\n      const last = result.length - 1;\r\n      result[last] += subentry.data;\r\n    } else if (subentry.tag === 'CONT' && subentry.data) {\r\n      result.push(subentry.data);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\n/** Sorts children and spouses. */\r\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\r\n  return sortSpouses(sortChildren(gedcom));\r\n}\r\n\r\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\r\n\r\n/** Returns true if the given file name has a known image extension. */\r\nexport function isImageFile(fileName: string): boolean {\r\n  const lowerName = fileName.toLowerCase();\r\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\r\n}\r\n\r\n/**\r\n * Removes images that are not HTTP links or do not have known image extensions.\r\n * Does not modify the input object.\r\n */\r\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\r\n  if (!indi.images || indi.images.length === 0) {\r\n    return indi;\r\n  }\r\n  const newImages: JsonImage[] = [];\r\n  indi.images.forEach((image) => {\r\n    const filePath = image.url.replaceAll('\\\\', '/');\r\n    const fileName = filePath.match(/[^/]*$/)![0];\r\n    // If the image file has been loaded into memory, use it.\r\n    if (images.has(filePath)) {\r\n      newImages.push({url: images.get(filePath)!, title: image.title});\r\n    } else if (images.has(fileName)) {\r\n      newImages.push({url: images.get(fileName)!, title: image.title});\r\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\r\n      newImages.push(image);\r\n    }\r\n  });\r\n  return Object.assign({}, indi, {images: newImages});\r\n}\r\n\r\n/**\r\n * Removes images that are not HTTP links.\r\n * Does not modify the input object.\r\n */\r\nfunction filterImages(\r\n  gedcom: JsonGedcomData,\r\n  images: Map<string, string>,\r\n): JsonGedcomData {\r\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\r\n  return Object.assign({}, gedcom, {indis: newIndis});\r\n}\r\n\r\n/**\r\n * Converts GEDCOM file into JSON data performing additional transformations:\r\n * - sort children by birth date\r\n * - remove images that are not HTTP links and aren't mapped in `images`.\r\n *\r\n * @param images Map from file name to image URL. This is used to pass in\r\n *   uploaded images.\r\n */\r\nexport function convertGedcom(\r\n  gedcom: string,\r\n  images: Map<string, string>,\r\n): TopolaData {\r\n  const entries = parseGedcom(gedcom);\r\n  const json = gedcomEntriesToJson(entries);\r\n  if (\r\n    !json ||\r\n    !json.indis ||\r\n    !json.indis.length ||\r\n    !json.fams ||\r\n    !json.fams.length\r\n  ) {\r\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\r\n  }\r\n\r\n  return {\r\n    chartData: filterImages(normalizeGedcom(json), images),\r\n    gedcom: prepareGedcom(entries),\r\n  };\r\n}\r\n\r\nexport function getSoftware(head: GedcomEntry): string | null {\r\n  const sour =\r\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\r\n  const name =\r\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\r\n  return (name && name.data) || null;\r\n}\r\n\r\nexport function getName(person: GedcomEntry): string | undefined {\r\n  const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\r\n  const notMarriedName = names.find(\r\n    (subEntry) =>\r\n      subEntry.tree.filter(\r\n        (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\r\n      ).length === 0,\r\n  );\r\n  const name = notMarriedName || names[0];\r\n  return name?.data.replace(/\\//g, '');\r\n}\r\n\r\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\r\n  const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\r\n\r\n  const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\r\n    ?.data;\r\n\r\n  return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\r\n}\r\n\r\nexport function getImageFileEntry(\r\n  objectEntry: GedcomEntry,\r\n): GedcomEntry | undefined {\r\n  return objectEntry.tree.find(\r\n    (entry) =>\r\n      entry.tag === 'FILE' &&\r\n      entry.data.startsWith('http') &&\r\n      isImageFile(entry.data),\r\n  );\r\n}\r\n","/** Sends an event to Google Analytics. */\r\nexport function analyticsEvent(action: string, data?: any) {\r\n  (window as any).gtag('event', action, data);\r\n}\r\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\r\nimport {IntlShape} from 'react-intl';\r\n\r\nconst DATE_QUALIFIERS = new Map([\r\n  ['abt', 'about'],\r\n  ['cal', 'calculated'],\r\n  ['est', 'estimated'],\r\n]);\r\n\r\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\r\n  const hasDay = date.day !== undefined;\r\n  const hasMonth = date.month !== undefined;\r\n  const hasYear = date.year !== undefined;\r\n  if (!hasDay && !hasMonth && !hasYear) {\r\n    return date.text || '';\r\n  }\r\n  const dateObject = toDateObject(date);\r\n  const translatedQualifier = formatDateQualifier(date.qualifier, intl);\r\n\r\n  const formatOptions: Intl.DateTimeFormatOptions = {\r\n    day: hasDay ? 'numeric' : undefined,\r\n    month: hasMonth ? 'long' : undefined,\r\n    year: hasYear ? 'numeric' : undefined,\r\n  };\r\n  const translatedDate = new Intl.DateTimeFormat(\r\n    intl.locale,\r\n    formatOptions,\r\n  ).format(dateObject);\r\n\r\n  return [translatedQualifier, translatedDate]\r\n    .filter((dateElement) => dateElement)\r\n    .join(' ');\r\n}\r\n\r\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\r\n  const fromDate = dateRange.from;\r\n  const toDate = dateRange.to;\r\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\r\n  const translatedToDate = toDate && formatDate(toDate, intl);\r\n  if (translatedFromDate && translatedToDate) {\r\n    return intl.formatMessage(\r\n      {\r\n        id: 'date.between',\r\n        defaultMessage: 'between {from} and {to}',\r\n      },\r\n      {from: translatedFromDate, to: translatedToDate},\r\n    );\r\n  }\r\n  if (translatedFromDate) {\r\n    return intl.formatMessage(\r\n      {\r\n        id: 'date.after',\r\n        defaultMessage: 'after {from}',\r\n      },\r\n      {from: translatedFromDate},\r\n    );\r\n  }\r\n  if (translatedToDate) {\r\n    return intl.formatMessage(\r\n      {\r\n        id: 'date.before',\r\n        defaultMessage: 'before {to}',\r\n      },\r\n      {to: translatedToDate},\r\n    );\r\n  }\r\n  return '';\r\n}\r\n\r\nexport function formatDateQualifier(\r\n  qualifier: string | undefined,\r\n  intl: IntlShape,\r\n): string {\r\n  const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\r\n  return (\r\n    (lowerCaseQualifier &&\r\n      intl.formatMessage({\r\n        id: `date.${lowerCaseQualifier}`,\r\n        defaultMessage:\r\n          DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\r\n      })) ||\r\n    ''\r\n  );\r\n}\r\n\r\n/** Formats a DateOrRange object. */\r\nexport function formatDateOrRange(\r\n  dateOrRange: DateOrRange | undefined,\r\n  intl: IntlShape,\r\n): string {\r\n  if (!dateOrRange) {\r\n    return '';\r\n  }\r\n  if (dateOrRange.date) {\r\n    return formatDate(dateOrRange.date, intl);\r\n  }\r\n  if (dateOrRange.dateRange) {\r\n    return formatDateRage(dateOrRange.dateRange, intl);\r\n  }\r\n  return '';\r\n}\r\n\r\n/** Formats a date given in GEDCOM format. */\r\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\r\n  return formatDateOrRange(getDate(gedcomDate), intl);\r\n}\r\n\r\nexport function compareTopolaDates(\r\n  date1: TopolaDate | undefined,\r\n  date2: TopolaDate | undefined,\r\n): number {\r\n  if (!date1 || !date1.year || !date2 || !date2.year) {\r\n    return 0;\r\n  }\r\n  if (date1.year !== date2.year) {\r\n    return date1.year - date2.year;\r\n  }\r\n  if (!date1.month || !date2.month) {\r\n    return 0;\r\n  }\r\n  if (date1.month !== date2.month) {\r\n    return date1.month - date2.month;\r\n  }\r\n  if (date1.day && date2.day && date1.day !== date2.day) {\r\n    return date1.month - date2.month;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/** Compares a dates given in GEDCOM format. */\r\nexport function compareDates(\r\n  firstDateOrRange: DateOrRange | undefined,\r\n  secondDateOrRange: DateOrRange | undefined,\r\n): number {\r\n  const date1 =\r\n    firstDateOrRange &&\r\n    (firstDateOrRange.date ||\r\n      (firstDateOrRange.dateRange &&\r\n        (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\r\n  const date2 =\r\n    secondDateOrRange &&\r\n    (secondDateOrRange.date ||\r\n      (secondDateOrRange.dateRange &&\r\n        (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\r\n  return compareTopolaDates(date1, date2);\r\n}\r\n\r\nexport function areDateRangesOverlapped(\r\n  range1: DateRange,\r\n  range2: DateRange,\r\n): boolean {\r\n  return (\r\n    compareTopolaDates(range1.from, range2.to) <= 0 &&\r\n    compareTopolaDates(range1.to, range2.from) >= 0\r\n  );\r\n}\r\n\r\nexport function isValidDateOrRange(\r\n  dateOrRange: DateOrRange | undefined,\r\n): boolean {\r\n  // invalid when range is closed and start is before end\r\n  if (isDateRangeClosed(dateOrRange?.dateRange)) {\r\n    return (\r\n      compareTopolaDates(\r\n        dateOrRange?.dateRange?.from,\r\n        dateOrRange?.dateRange?.to,\r\n      ) <= 0\r\n    );\r\n  }\r\n  //valid when there is exact date or date range has start or end defined\r\n  return !!(\r\n    dateOrRange?.date ||\r\n    dateOrRange?.dateRange?.from ||\r\n    dateOrRange?.dateRange?.to\r\n  );\r\n}\r\n\r\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\r\n  return !!(range?.from && range?.to);\r\n}\r\n\r\nexport function toDateObject(date: TopolaDate): Date {\r\n  return new Date(\r\n    date.year !== undefined ? date.year! : 0,\r\n    date.month !== undefined ? date.month! - 1 : 0,\r\n    date.day !== undefined ? date.day! : 1,\r\n  );\r\n}\r\n","import {IndiInfo} from 'topola';\r\nimport {TopolaData} from '../util/gedcom_util';\r\n\r\n/** Supported data sources. */\r\nexport enum DataSourceEnum {\r\n  UPLOADED,\r\n  GEDCOM_URL,\r\n  WIKITREE,\r\n  EMBEDDED,\r\n}\r\n\r\n/** Source specification together with individual selection. */\r\nexport interface SourceSelection<SourceSpecT> {\r\n  spec: SourceSpecT;\r\n  selection?: IndiInfo;\r\n}\r\n\r\n/** Interface encapsulating functions specific for a data source. */\r\nexport interface DataSource<SourceSpecT> {\r\n  /**\r\n   * Returns true if the application is now loading a completely new data set\r\n   * and the existing one should be wiped.\r\n   */\r\n  isNewData(\r\n    newSource: SourceSelection<SourceSpecT>,\r\n    oldSource: SourceSelection<SourceSpecT>,\r\n    data?: TopolaData,\r\n  ): boolean;\r\n  /** Loads data from the data source. */\r\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\r\n}\r\n","import rehypeStringify from 'rehype-stringify';\r\nimport remarkParse from 'remark-parse';\r\nimport remarkRehype from 'remark-rehype';\r\nimport {Button, Header, Modal} from 'semantic-ui-react';\r\nimport {unified} from 'unified';\r\nimport {useEffect, useState} from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\r\n\r\n/**\r\n * Returns changelog as raw HTML.\r\n *\r\n * @param maxVersions Max number of versions to include in changelog\r\n * @param seenVersion Last seen app version\r\n */\r\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\r\n  const seenVersionDate = seenVersion\r\n    ? Date.parse(seenVersion.slice(0, 10))\r\n    : 0;\r\n\r\n  const changes =\r\n    process.env.REACT_APP_CHANGELOG?.split('##')\r\n      .slice(1, maxVersions + 1)\r\n      .map((notes) => {\r\n        const date = Date.parse(notes.split('\\n')[0].trim());\r\n        return {date, notes: '####' + notes};\r\n      })\r\n      .filter((release) => release.date > seenVersionDate)\r\n      .map((release) => release.notes)\r\n      .join('\\n') || '';\r\n\r\n  const parsedChanges = await unified()\r\n    .use(remarkParse)\r\n    .use(remarkRehype)\r\n    .use(rehypeStringify)\r\n    .process(changes);\r\n  return String(parsedChanges);\r\n}\r\n\r\n/** Stores in local storage the current app version as the last seen version. */\r\nexport function updateSeenVersion() {\r\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\r\n}\r\n\r\n/**\r\n * Shows changelog entries if the user has seen an older version of\r\n * Topola Viewer and is now seeing a newer one.\r\n */\r\nexport function Changelog() {\r\n  const [open, setOpen] = useState(false);\r\n  const [changelog, setChangelog] = useState('');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\r\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\r\n      if (!seenVersion || seenVersion === currentVersion) {\r\n        return;\r\n      }\r\n\r\n      const changes = await getChangelog(3, seenVersion);\r\n      setChangelog(changes);\r\n      setOpen(!!changes);\r\n      updateSeenVersion();\r\n    })();\r\n  });\r\n\r\n  return (\r\n    <Modal open={open} centered={false}>\r\n      <Header>\r\n        <FormattedMessage\r\n          id=\"whats_new.title\"\r\n          defaultMessage=\"What's new in this version?\"\r\n        />\r\n      </Header>\r\n      <Modal.Content className=\"limit-height\">\r\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\r\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\r\n          <FormattedMessage\r\n            id=\"intro.full_changelog\"\r\n            defaultMessage=\"See full changelog\"\r\n          />\r\n        </a>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button primary onClick={() => setOpen(false)}>\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import {Date as TopolaDate} from 'topola/dist/data';\r\nimport {IntlShape} from 'react-intl';\r\nimport {DateOrRange, getDate} from 'topola';\r\nimport {\r\n  areDateRangesOverlapped,\r\n  compareDates,\r\n  formatDateQualifier,\r\n  isDateRangeClosed,\r\n  isValidDateOrRange,\r\n  toDateObject,\r\n} from './date_util';\r\n\r\nfunction formatExactAge(\r\n  birthDate: TopolaDate,\r\n  deathDate: TopolaDate,\r\n  intl: IntlShape,\r\n): string {\r\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\r\n  const qualifier = birthDate.qualifier || deathDate.qualifier;\r\n  const translatedQualifier =\r\n    qualifier && formatDateQualifier(qualifier, intl) + ' ';\r\n\r\n  return intl.formatMessage(\r\n    {\r\n      id: 'age.exact',\r\n      defaultMessage:\r\n        '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\r\n    },\r\n    {age: ageInYears, qualifier: translatedQualifier},\r\n  );\r\n}\r\n\r\nfunction formatAgeMoreThan(\r\n  birthDate: TopolaDate,\r\n  deathDate: TopolaDate,\r\n  intl: IntlShape,\r\n): string {\r\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\r\n  return intl.formatMessage(\r\n    {\r\n      id: 'age.more',\r\n      defaultMessage:\r\n        'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\r\n    },\r\n    {age: ageInYears},\r\n  );\r\n}\r\n\r\nfunction formatAgeLessThan(\r\n  birthDate: TopolaDate,\r\n  deathDate: TopolaDate,\r\n  intl: IntlShape,\r\n): string {\r\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\r\n  return intl.formatMessage(\r\n    {\r\n      id: 'age.less',\r\n      defaultMessage:\r\n        'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\r\n    },\r\n    {age: ageInYears},\r\n  );\r\n}\r\n\r\nfunction formatAgeBetween(\r\n  birthDateFrom: TopolaDate,\r\n  birthDateTo: TopolaDate,\r\n  deathDateFrom: TopolaDate,\r\n  deathDateTo: TopolaDate,\r\n  intl: IntlShape,\r\n): string {\r\n  const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\r\n  const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\r\n  return intl.formatMessage(\r\n    {\r\n      id: 'age.between',\r\n      defaultMessage:\r\n        'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\r\n    },\r\n    {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\r\n  );\r\n}\r\n\r\nfunction canCalculateAge(\r\n  birthDate: DateOrRange | undefined,\r\n  deathDate: DateOrRange | undefined,\r\n): boolean {\r\n  if (birthDate && deathDate) {\r\n    // cannot calculate if there is no valid birth or death date\r\n    if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\r\n      return false;\r\n    }\r\n    //cannot calculate if death date is before birth date\r\n    if (compareDates(birthDate, deathDate) > 0) {\r\n      return false;\r\n    }\r\n    // cannot calculate if closed date range for birth or death are overlapping\r\n    if (\r\n      birthDate.dateRange &&\r\n      deathDate.dateRange &&\r\n      isDateRangeClosed(birthDate?.dateRange) &&\r\n      isDateRangeClosed(deathDate?.dateRange)\r\n    ) {\r\n      return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction calcDateDifferenceInYears(\r\n  firstDate: TopolaDate,\r\n  secondDate: TopolaDate,\r\n): number {\r\n  const firstDateObject = toDateObject(firstDate);\r\n  const secondDateObject = toDateObject(secondDate);\r\n\r\n  const startYear = firstDateObject.getUTCFullYear();\r\n\r\n  let yearDiff = secondDateObject.getUTCFullYear() - startYear;\r\n  let monthDiff =\r\n    secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\r\n  if (monthDiff < 0) {\r\n    yearDiff--;\r\n    monthDiff += 12;\r\n  }\r\n  const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\r\n  if (dayDiff < 0) {\r\n    if (monthDiff <= 0) {\r\n      yearDiff--;\r\n    }\r\n  }\r\n  return Math.abs(yearDiff);\r\n}\r\n\r\nexport function calcAge(\r\n  birthGedcomDate: string | undefined,\r\n  deathGedcomDate: string | undefined,\r\n  intl: IntlShape,\r\n): string | undefined {\r\n  if (birthGedcomDate && deathGedcomDate) {\r\n    const birthDateOrRange = getDate(birthGedcomDate);\r\n    const deathDateOrRange = getDate(deathGedcomDate);\r\n    if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\r\n      if (birthDateOrRange?.date) {\r\n        if (deathDateOrRange?.date) {\r\n          return formatExactAge(\r\n            birthDateOrRange.date,\r\n            deathDateOrRange.date,\r\n            intl,\r\n          );\r\n        }\r\n        if (\r\n          deathDateOrRange?.dateRange?.from &&\r\n          deathDateOrRange.dateRange?.to\r\n        ) {\r\n          return formatAgeBetween(\r\n            birthDateOrRange.date,\r\n            birthDateOrRange.date,\r\n            deathDateOrRange?.dateRange?.from,\r\n            deathDateOrRange?.dateRange?.to,\r\n            intl,\r\n          );\r\n        }\r\n        if (deathDateOrRange?.dateRange?.from) {\r\n          return formatAgeMoreThan(\r\n            birthDateOrRange.date,\r\n            deathDateOrRange.dateRange?.from,\r\n            intl,\r\n          );\r\n        }\r\n        if (deathDateOrRange?.dateRange?.to) {\r\n          return formatAgeLessThan(\r\n            birthDateOrRange.date,\r\n            deathDateOrRange.dateRange?.to,\r\n            intl,\r\n          );\r\n        }\r\n      }\r\n      if (\r\n        birthDateOrRange?.dateRange?.from &&\r\n        birthDateOrRange?.dateRange?.to\r\n      ) {\r\n        if (deathDateOrRange?.date) {\r\n          return formatAgeBetween(\r\n            birthDateOrRange?.dateRange?.from,\r\n            birthDateOrRange?.dateRange?.to,\r\n            deathDateOrRange?.date,\r\n            deathDateOrRange?.date,\r\n            intl,\r\n          );\r\n        }\r\n        if (\r\n          deathDateOrRange?.dateRange?.from &&\r\n          deathDateOrRange.dateRange?.to\r\n        ) {\r\n          return formatAgeBetween(\r\n            birthDateOrRange?.dateRange?.from,\r\n            birthDateOrRange?.dateRange?.to,\r\n            deathDateOrRange?.dateRange?.from,\r\n            deathDateOrRange?.dateRange?.to,\r\n            intl,\r\n          );\r\n        }\r\n        if (deathDateOrRange?.dateRange?.from) {\r\n          return formatAgeMoreThan(\r\n            birthDateOrRange.dateRange?.to,\r\n            deathDateOrRange.dateRange?.from,\r\n            intl,\r\n          );\r\n        }\r\n        if (deathDateOrRange?.dateRange?.to) {\r\n          return formatAgeLessThan(\r\n            birthDateOrRange.dateRange?.from,\r\n            deathDateOrRange.dateRange?.to,\r\n            intl,\r\n          );\r\n        }\r\n      }\r\n      if (birthDateOrRange?.dateRange?.from) {\r\n        if (deathDateOrRange?.date) {\r\n          return formatAgeLessThan(\r\n            birthDateOrRange.dateRange?.from,\r\n            deathDateOrRange.date,\r\n            intl,\r\n          );\r\n        }\r\n        if (deathDateOrRange?.dateRange?.to) {\r\n          return formatAgeLessThan(\r\n            birthDateOrRange.dateRange?.from,\r\n            deathDateOrRange.dateRange?.to,\r\n            intl,\r\n          );\r\n        }\r\n      }\r\n      if (birthDateOrRange?.dateRange?.to) {\r\n        if (deathDateOrRange?.date) {\r\n          return formatAgeMoreThan(\r\n            birthDateOrRange?.dateRange?.to,\r\n            deathDateOrRange.date,\r\n            intl,\r\n          );\r\n        }\r\n        if (deathDateOrRange?.dateRange?.from) {\r\n          return formatAgeMoreThan(\r\n            birthDateOrRange?.dateRange?.to,\r\n            deathDateOrRange.dateRange?.from,\r\n            intl,\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {FormattedMessage} from 'react-intl';\r\n\r\nconst TAG_DESCRIPTIONS = new Map([\r\n  ['ADOP', 'Adoption'],\r\n  ['BAPM', 'Baptism'],\r\n  ['BIRT', 'Birth'],\r\n  ['BURI', 'Burial'],\r\n  ['CENS', 'Census'],\r\n  ['CHR', 'Christening'],\r\n  ['CREM', 'Cremation'],\r\n  ['DEAT', 'Death'],\r\n  ['EDUC', 'Education'],\r\n  ['EMAIL', 'E-mail'],\r\n  ['EMIG', 'Emigration'],\r\n  ['EVEN', 'Event'],\r\n  ['FACT', 'Fact'],\r\n  ['IMMI', 'Immigration'],\r\n  ['MARR', 'Marriage'],\r\n  ['DIV', 'Divorce'],\r\n  ['MILT', 'Military services'],\r\n  ['NATU', 'Naturalization'],\r\n  ['OCCU', 'Occupation'],\r\n  ['TITL', 'Title'],\r\n  ['WWW', 'WWW'],\r\n  ['birth', 'Birth name'],\r\n  ['married', 'Married name'],\r\n  ['maiden', 'Maiden name'],\r\n  ['immigrant', 'Immigrant name'],\r\n  ['aka', 'Also known as'],\r\n]);\r\n\r\ninterface Props {\r\n  tag: string;\r\n}\r\n\r\nexport function TranslatedTag(props: Props) {\r\n  const normalizedTag = props.tag.replace(/_/g, '');\r\n  return (\r\n    <FormattedMessage\r\n      id={`gedcom.${normalizedTag}`}\r\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\r\n    />\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n  Message,\r\n  Modal,\r\n  Placeholder,\r\n} from 'semantic-ui-react';\r\nimport {SyntheticEvent, useState} from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\ninterface Props {\r\n  url: string;\r\n  filename: string;\r\n  title?: string;\r\n}\r\n\r\nexport function WrappedImage(props: Props) {\r\n  const [imageOpen, setImageOpen] = useState(false);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [imageFailed, setImageFailed] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState('');\r\n\r\n  if (imageLoaded && imageSrc !== props.url) {\r\n    setImageLoaded(false);\r\n  }\r\n  return (\r\n    <>\r\n      <Image\r\n        className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\r\n        onClick={() => setImageOpen(true)}\r\n        onLoad={() => {\r\n          setImageLoaded(true);\r\n          setImageSrc(props.url);\r\n          setImageFailed(false);\r\n        }}\r\n        onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\r\n          setImageLoaded(true);\r\n          setImageSrc(props.url);\r\n          setImageFailed(true);\r\n          e.currentTarget.alt = '';\r\n        }}\r\n        src={props.url}\r\n        alt={props.title || props.filename}\r\n        centered={true}\r\n      />\r\n      <Placeholder\r\n        className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\r\n      >\r\n        <Placeholder.Image square />\r\n      </Placeholder>\r\n      {imageFailed && (\r\n        <Container fluid textAlign=\"center\">\r\n          <Message negative compact>\r\n            <Message.Header>\r\n              <FormattedMessage\r\n                id=\"error.failed_to_load_image\"\r\n                defaultMessage={'Failed to load image file'}\r\n              />\r\n            </Message.Header>\r\n          </Message>\r\n        </Container>\r\n      )}\r\n      <Modal\r\n        basic\r\n        size=\"large\"\r\n        closeIcon={<Icon name=\"close\" color=\"red\" />}\r\n        open={imageOpen}\r\n        onClose={() => setImageOpen(false)}\r\n        onOpen={() => setImageOpen(true)}\r\n        centered={false}\r\n      >\r\n        <Modal.Header>{props.title}</Modal.Header>\r\n        <Modal.Content image>\r\n          <Image\r\n            className=\"modal-image\"\r\n            src={props.url}\r\n            alt={props.title || props.filename}\r\n            label={<Label attached=\"bottom\" content={props.filename} />}\r\n            wrapped\r\n          />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import Linkify from 'react-linkify';\r\n\r\ninterface Props {\r\n  lines: (JSX.Element | string)[];\r\n}\r\n\r\nexport function MultilineText(props: Props) {\r\n  return (\r\n    <>\r\n      {props.lines.map((line, index) => (\r\n        <div key={index}>\r\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\r\n          <br />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\r\nimport {\r\n  Icon,\r\n  Item,\r\n  List,\r\n  Menu,\r\n  MenuItemProps,\r\n  Popup,\r\n  Tab,\r\n} from 'semantic-ui-react';\r\nimport {useState} from 'react';\r\nimport {WrappedImage} from './wrapped-image';\r\nimport * as React from 'react';\r\nimport {MultilineText} from './multiline-text';\r\nimport {DateOrRange} from 'topola';\r\nimport {formatDateOrRange} from '../util/date_util';\r\nimport Linkify from 'react-linkify';\r\n\r\nexport interface Image {\r\n  url: string;\r\n  filename: string;\r\n  title?: string;\r\n}\r\n\r\nexport interface Source {\r\n  title?: string;\r\n  author?: string;\r\n  page?: string;\r\n  date?: DateOrRange;\r\n  publicationInfo?: string;\r\n}\r\n\r\ninterface Props {\r\n  images?: Image[];\r\n  notes?: string[][];\r\n  sources?: Source[];\r\n  indi: string;\r\n}\r\n\r\nfunction eventImages(images: Image[] | undefined) {\r\n  return (\r\n    !!images &&\r\n    images.map((image, index) => (\r\n      <List key={index}>\r\n        <List.Item>\r\n          <WrappedImage\r\n            url={image.url}\r\n            filename={image.filename}\r\n            title={image.title}\r\n          />\r\n        </List.Item>\r\n      </List>\r\n    ))\r\n  );\r\n}\r\n\r\nfunction eventNotes(notes: string[][] | undefined) {\r\n  return (\r\n    !!notes?.length &&\r\n    notes.map((note, index) => (\r\n      <div key={index}>\r\n        <MultilineText\r\n          lines={note.map((line, index) => (\r\n            <i key={index}>{line}</i>\r\n          ))}\r\n        />\r\n      </div>\r\n    ))\r\n  );\r\n}\r\n\r\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\r\n  return (\r\n    !!sources?.length && (\r\n      <List>\r\n        {sources.map((source, index) => (\r\n          <List.Item key={index}>\r\n            <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\" />\r\n            <List.Content>\r\n              <List.Header>\r\n                <Linkify properties={{target: '_blank'}}>\r\n                  {[source.author, source.title, source.publicationInfo]\r\n                    .filter((sourceElement) => sourceElement)\r\n                    .join(', ')}\r\n                </Linkify>\r\n              </List.Header>\r\n              <List.Description>\r\n                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\r\n                {source.date\r\n                  ? ' [' + formatDateOrRange(source.date, intl) + ']'\r\n                  : null}\r\n              </List.Description>\r\n            </List.Content>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    )\r\n  );\r\n}\r\n\r\nexport function EventExtras(props: Props) {\r\n  const intl = useIntl();\r\n  const [activeIndex, setActiveIndex] = useState(-1);\r\n  const [indi, setIndi] = useState('');\r\n\r\n  if (!indi || indi !== props.indi) {\r\n    setActiveIndex(-1);\r\n    setIndi(props.indi);\r\n  }\r\n\r\n  function handleTabOnClick(\r\n    event: React.MouseEvent<HTMLAnchorElement>,\r\n    menuItemProps: MenuItemProps,\r\n  ) {\r\n    menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\r\n      ? setActiveIndex(menuItemProps.index)\r\n      : setActiveIndex(-1);\r\n  }\r\n\r\n  const imageTab = props.images?.length && {\r\n    menuItem: (\r\n      <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\r\n        <Popup\r\n          content={\r\n            <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\" />\r\n          }\r\n          size=\"mini\"\r\n          position=\"bottom center\"\r\n          trigger={<Icon circular name=\"camera\" />}\r\n        />\r\n      </Menu.Item>\r\n    ),\r\n    render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\r\n  };\r\n\r\n  const noteTab = props.notes?.length && {\r\n    menuItem: (\r\n      <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\r\n        <Popup\r\n          content={\r\n            <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\" />\r\n          }\r\n          size=\"mini\"\r\n          position=\"bottom center\"\r\n          trigger={<Icon circular name=\"sticky note outline\" />}\r\n        />\r\n      </Menu.Item>\r\n    ),\r\n    render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\r\n  };\r\n\r\n  const sourceTab = props.sources?.length && {\r\n    menuItem: (\r\n      <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\r\n        <Popup\r\n          content={\r\n            <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\" />\r\n          }\r\n          size=\"mini\"\r\n          position=\"bottom center\"\r\n          trigger={<Icon circular name=\"quote right\" />}\r\n        />\r\n      </Menu.Item>\r\n    ),\r\n    render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\r\n  };\r\n\r\n  const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\r\n    tab ? [tab] : [],\r\n  );\r\n\r\n  if (panes.length) {\r\n    return (\r\n      <Item.Description>\r\n        <Tab\r\n          className=\"event-extras\"\r\n          activeIndex={activeIndex}\r\n          renderActiveOnly={true}\r\n          menu={{\r\n            tabular: true,\r\n            attached: true,\r\n            compact: true,\r\n            borderless: true,\r\n          }}\r\n          panes={panes}\r\n        />\r\n      </Item.Description>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n","import * as queryString from 'query-string';\r\nimport flatMap from 'array.prototype.flatmap';\r\nimport {calcAge} from '../util/age_util';\r\nimport {compareDates, formatDateOrRange} from '../util/date_util';\r\nimport {DateOrRange, getDate} from 'topola';\r\nimport {\r\n  dereference,\r\n  GedcomData,\r\n  getData,\r\n  getImageFileEntry,\r\n  getFileName,\r\n  getName,\r\n} from '../util/gedcom_util';\r\nimport {GedcomEntry} from 'parse-gedcom';\r\nimport {FormattedMessage, IntlShape, useIntl} from 'react-intl';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {pointerToId} from '../util/gedcom_util';\r\nimport {TranslatedTag} from './translated-tag';\r\nimport {Header, Item} from 'semantic-ui-react';\r\nimport {EventExtras, Image, Source} from './event-extras';\r\n\r\nfunction PersonLink(props: {person: GedcomEntry}) {\r\n  const location = useLocation();\r\n\r\n  const name = getName(props.person);\r\n\r\n  const search = queryString.parse(location.search);\r\n  search['indi'] = pointerToId(props.person.pointer);\r\n\r\n  return (\r\n    <Item.Meta>\r\n      <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\r\n        {name ? (\r\n          name\r\n        ) : (\r\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\r\n        )}\r\n      </Link>\r\n    </Item.Meta>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  gedcom: GedcomData;\r\n  indi: string;\r\n  entries: GedcomEntry[];\r\n}\r\n\r\ninterface EventData {\r\n  type: string;\r\n  date?: DateOrRange;\r\n  age?: string;\r\n  personLink?: GedcomEntry;\r\n  place?: string[];\r\n  images?: Image[];\r\n  notes?: string[][];\r\n  sources?: Source[];\r\n  indi: string;\r\n}\r\n\r\nconst EVENT_TAGS = [\r\n  'BIRT',\r\n  'BAPM',\r\n  'CHR',\r\n  'FAMS',\r\n  'EVEN',\r\n  'CENS',\r\n  'DEAT',\r\n  'BURI',\r\n];\r\n\r\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\r\n\r\nfunction EventHeader(props: {event: EventData}) {\r\n  const intl = useIntl();\r\n  return (\r\n    <div className=\"event-header\">\r\n      <Header as=\"span\" size=\"small\">\r\n        <TranslatedTag tag={props.event.type} />\r\n      </Header>\r\n      {props.event.date ? (\r\n        <Header as=\"span\" textAlign=\"right\" sub>\r\n          {formatDateOrRange(props.event.date, intl)}\r\n        </Header>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\r\n  const spouseReference = familyEntry.tree\r\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\r\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\r\n\r\n  if (!spouseReference) {\r\n    return undefined;\r\n  }\r\n  return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\r\n}\r\n\r\nfunction getAge(\r\n  eventEntry: GedcomEntry,\r\n  indi: string,\r\n  gedcom: GedcomData,\r\n  intl: IntlShape,\r\n): string | undefined {\r\n  if (eventEntry.tag !== 'DEAT') {\r\n    return undefined;\r\n  }\r\n  const deathDate = resolveDate(eventEntry);\r\n\r\n  const birthDate = gedcom.indis[indi].tree\r\n    .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\r\n    .map((birthEvent) => resolveDate(birthEvent))\r\n    .find((topolaDate) => topolaDate);\r\n\r\n  if (!birthDate || !deathDate) {\r\n    return undefined;\r\n  }\r\n  return calcAge(birthDate?.data, deathDate?.data, intl);\r\n}\r\n\r\nfunction eventPlace(entry: GedcomEntry) {\r\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\r\n  return place?.data ? getData(place) : undefined;\r\n}\r\n\r\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\r\n  return entry.tree\r\n    .filter((subEntry) => 'OBJE' === subEntry.tag)\r\n    .map((objectEntry) =>\r\n      dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\r\n    )\r\n    .map((objectEntry) => getImageFileEntry(objectEntry))\r\n    .flatMap((imageFileEntry) =>\r\n      imageFileEntry\r\n        ? [\r\n            {\r\n              url: imageFileEntry?.data || '',\r\n              filename: getFileName(imageFileEntry) || '',\r\n            },\r\n          ]\r\n        : [],\r\n    );\r\n}\r\n\r\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\r\n  return entry.tree\r\n    .filter((subEntry) => 'SOUR' === subEntry.tag)\r\n    .map((sourceEntryReference) => {\r\n      const sourceEntry = dereference(\r\n        sourceEntryReference,\r\n        gedcom,\r\n        (gedcom) => gedcom.other,\r\n      );\r\n\r\n      const title = sourceEntry.tree.find(\r\n        (subEntry) => 'TITL' === subEntry.tag,\r\n      );\r\n\r\n      const abbr = sourceEntry.tree.find(\r\n          (subEntry) => 'ABBR' === subEntry.tag,\r\n      );\r\n\r\n      const author = sourceEntry.tree.find(\r\n        (subEntry) => 'AUTH' === subEntry.tag,\r\n      );\r\n\r\n      const publicationInfo = sourceEntry.tree.find(\r\n        (subEntry) => 'PUBL' === subEntry.tag,\r\n      );\r\n\r\n      const page = sourceEntryReference.tree.find(\r\n        (subEntry) => 'PAGE' === subEntry.tag,\r\n      );\r\n\r\n      const sourceData = sourceEntryReference.tree.find(\r\n        (subEntry) => 'DATA' === subEntry.tag,\r\n      );\r\n\r\n      const date = sourceData ? resolveDate(sourceData) : undefined;\r\n\r\n      return {\r\n        title: title?.data || abbr?.data,\r\n        author: author?.data,\r\n        page: page?.data,\r\n        date: date ? getDate(date.data) : undefined,\r\n        publicationInfo: publicationInfo?.data,\r\n      };\r\n    });\r\n}\r\n\r\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\r\n  return entry.tree\r\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\r\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\r\n    .map((note) => getData(note));\r\n}\r\n\r\nfunction toEvent(\r\n  entry: GedcomEntry,\r\n  gedcom: GedcomData,\r\n  indi: string,\r\n  intl: IntlShape,\r\n): EventData[] {\r\n  if (entry.tag === 'FAMS') {\r\n    return toFamilyEvents(entry, gedcom, indi);\r\n  }\r\n  return toIndiEvent(entry, gedcom, indi, intl);\r\n}\r\n\r\nfunction toIndiEvent(\r\n  entry: GedcomEntry,\r\n  gedcom: GedcomData,\r\n  indi: string,\r\n  intl: IntlShape,\r\n): EventData[] {\r\n  const date = resolveDate(entry) || null;\r\n  return [\r\n    {\r\n      date: date ? getDate(date.data) : undefined,\r\n      type: entry.tag,\r\n      age: getAge(entry, indi, gedcom, intl),\r\n      place: eventPlace(entry),\r\n      images: eventImages(entry, gedcom),\r\n      notes: eventNotes(entry, gedcom),\r\n      sources: eventSources(entry, gedcom),\r\n      indi: indi,\r\n    },\r\n  ];\r\n}\r\n\r\nfunction resolveDate(entry: GedcomEntry) {\r\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\r\n}\r\n\r\nfunction toFamilyEvents(\r\n  entry: GedcomEntry,\r\n  gedcom: GedcomData,\r\n  indi: string,\r\n): EventData[] {\r\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\r\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\r\n    family.tree.filter((entry) => entry.tag === tag),\r\n  ).map((familyMarriageEvent) => {\r\n    const date = resolveDate(familyMarriageEvent) || null;\r\n    return {\r\n      date: date ? getDate(date.data) : undefined,\r\n      type: familyMarriageEvent.tag,\r\n      personLink: getSpouse(indi, family, gedcom),\r\n      place: eventPlace(familyMarriageEvent),\r\n      images: eventImages(familyMarriageEvent, gedcom),\r\n      notes: eventNotes(familyMarriageEvent, gedcom),\r\n      sources: eventSources(familyMarriageEvent, gedcom),\r\n      indi: indi,\r\n    };\r\n  });\r\n}\r\n\r\nfunction Event(props: {event: EventData}) {\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <EventHeader event={props.event} />\r\n        {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\r\n        {!!props.event.personLink && (\r\n          <PersonLink person={props.event.personLink} />\r\n        )}\r\n        {!!props.event.place && (\r\n          <Item.Description>{props.event.place}</Item.Description>\r\n        )}\r\n        <EventExtras\r\n          images={props.event.images}\r\n          notes={props.event.notes}\r\n          sources={props.event.sources}\r\n          indi={props.event.indi}\r\n        />\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}\r\n\r\nexport function Events(props: Props) {\r\n  const intl = useIntl();\r\n\r\n  const events = flatMap(EVENT_TAGS, (tag) =>\r\n    props.entries\r\n      .filter((entry) => entry.tag === tag)\r\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\r\n      .flatMap((events) => events)\r\n      .sort((event1, event2) => compareDates(event1.date, event2.date)),\r\n  );\r\n  if (events.length) {\r\n    return (\r\n      <>\r\n        {events.map((event, index) => (\r\n          <Event event={event} key={index} />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n","import flatMap from 'array.prototype.flatmap';\r\nimport {\r\n  dereference,\r\n  GedcomData,\r\n  getData,\r\n  getFileName,\r\n  getImageFileEntry\r\n} from '../util/gedcom_util';\r\nimport {Events} from './events';\r\nimport {GedcomEntry} from 'parse-gedcom';\r\nimport {MultilineText} from './multiline-text';\r\nimport {TranslatedTag} from './translated-tag';\r\nimport {Header, Item} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {WrappedImage} from './wrapped-image';\r\n\r\nconst EXCLUDED_TAGS = [\r\n  'BIRT',\r\n  'BAPM',\r\n  'CHR',\r\n  'EVEN',\r\n  'CENS',\r\n  'DEAT',\r\n  'BURI',\r\n  'NAME',\r\n  'SEX',\r\n  'FAMC',\r\n  'FAMS',\r\n  'NOTE',\r\n  'SOUR',\r\n];\r\n\r\nfunction dataDetails(entry: GedcomEntry) {\r\n  const lines = [];\r\n  if (entry.data) {\r\n    lines.push(...getData(entry));\r\n  }\r\n  entry.tree\r\n    .filter((subentry) => subentry.tag === 'NOTE')\r\n    .forEach((note) =>\r\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\r\n    );\r\n  if (!lines.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <Header sub>\r\n        <TranslatedTag tag={entry.tag} />\r\n      </Header>\r\n      <span>\r\n        <MultilineText lines={lines} />\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction fileDetails(objectEntry: GedcomEntry) {\r\n  const imageFileEntry = getImageFileEntry(objectEntry);\r\n\r\n  return imageFileEntry ? (\r\n    <div className=\"person-image\">\r\n      <WrappedImage\r\n        url={imageFileEntry.data}\r\n        filename={getFileName(imageFileEntry) || ''}\r\n      />\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nfunction noteDetails(entry: GedcomEntry) {\r\n  return (\r\n    <MultilineText\r\n      lines={getData(entry).map((line, index) => (\r\n        <i key={index}>{line}</i>\r\n      ))}\r\n    />\r\n  );\r\n}\r\n\r\nfunction nameDetails(entry: GedcomEntry) {\r\n  const fullName = entry.data.replaceAll('/', '');\r\n\r\n  const nameType = entry.tree.find(\r\n    (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\r\n  )?.data;\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"span\" size=\"large\">\r\n        {fullName ? (\r\n          fullName\r\n        ) : (\r\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\r\n        )}\r\n      </Header>\r\n      {fullName && nameType && (\r\n        <Item.Meta>\r\n          <TranslatedTag tag={nameType} />\r\n        </Item.Meta>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getDetails(\r\n  entries: GedcomEntry[],\r\n  tags: string[],\r\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\r\n): JSX.Element[] {\r\n  return flatMap(tags, (tag) =>\r\n    entries\r\n      .filter((entry) => entry.tag === tag)\r\n      .map((entry) => detailsFunction(entry)),\r\n  )\r\n    .filter((element) => element !== null)\r\n    .map((element, index) => (\r\n      <Item key={index}>\r\n        <Item.Content>{element}</Item.Content>\r\n      </Item>\r\n    ));\r\n}\r\n\r\n/**\r\n * Returns true if there is displayable information in this entry.\r\n * Returns false if there is no data in this entry or this is only a reference\r\n * to another entry.\r\n */\r\nfunction hasData(entry: GedcomEntry) {\r\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\r\n}\r\n\r\nfunction getOtherDetails(entries: GedcomEntry[]) {\r\n  return entries\r\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\r\n    .filter(hasData)\r\n    .map((entry) => dataDetails(entry))\r\n    .filter((element) => element !== null)\r\n    .map((element, index) => (\r\n      <Item key={index}>\r\n        <Item.Content>{element}</Item.Content>\r\n      </Item>\r\n    ));\r\n}\r\n\r\ninterface Props {\r\n  gedcom: GedcomData;\r\n  indi: string;\r\n}\r\n\r\nexport function Details(props: Props) {\r\n  const entries = props.gedcom.indis[props.indi].tree;\r\n  const entriesWithData = entries\r\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\r\n    .filter(hasData);\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      <Item.Group divided>\r\n        {getDetails(entries, ['NAME'], nameDetails)}\r\n        {getDetails(entriesWithData, ['OBJE'], fileDetails)}\r\n        <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\r\n        {getOtherDetails(entriesWithData)}\r\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\r\n      </Item.Group>\r\n    </div>\r\n  );\r\n}\r\n","import {analyticsEvent} from '../util/analytics';\r\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\r\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\r\nimport {loadGedcom} from './load_data';\r\n\r\n/**\r\n * Message types used in embedded mode.\r\n * When the parent is ready to receive messages, it sends PARENT_READY.\r\n * When the child (this app) is ready to receive messages, it sends READY.\r\n * When the child receives PARENT_READY, it sends READY.\r\n * When the parent receives READY, it sends data in a GEDCOM message.\r\n */\r\nenum EmbeddedMessageType {\r\n  GEDCOM = 'gedcom',\r\n  READY = 'ready',\r\n  PARENT_READY = 'parent_ready',\r\n}\r\n\r\n/** Message sent to parent or received from parent in embedded mode. */\r\ninterface EmbeddedMessage {\r\n  message: EmbeddedMessageType;\r\n}\r\n\r\ninterface GedcomMessage extends EmbeddedMessage {\r\n  message: EmbeddedMessageType.GEDCOM;\r\n  gedcom?: string;\r\n}\r\n\r\nexport interface EmbeddedSourceSpec {\r\n  source: DataSourceEnum.EMBEDDED;\r\n}\r\n\r\n/** GEDCOM file received from outside of the iframe. */\r\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\r\n  isNewData(\r\n    newSource: SourceSelection<EmbeddedSourceSpec>,\r\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    // Never reload data.\r\n    return false;\r\n  }\r\n\r\n  private async onMessage(\r\n    message: EmbeddedMessage,\r\n    resolve: (value: TopolaData) => void,\r\n    reject: (reason: any) => void,\r\n  ) {\r\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\r\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\r\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\r\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\r\n      const gedcom = (message as GedcomMessage).gedcom;\r\n      if (!gedcom) {\r\n        return;\r\n      }\r\n      try {\r\n        const data = await loadGedcom('', gedcom);\r\n        const software = getSoftware(data.gedcom.head);\r\n        analyticsEvent('embedded_file_loaded', {\r\n          event_label: software,\r\n        });\r\n        resolve(data);\r\n      } catch (error) {\r\n        analyticsEvent('embedded_file_error');\r\n        reject(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadData(\r\n    source: SourceSelection<EmbeddedSourceSpec>,\r\n  ): Promise<TopolaData> {\r\n    // Notify the parent window that we are ready.\r\n    return new Promise<TopolaData>((resolve, reject) => {\r\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\r\n      window.addEventListener('message', (data) =>\r\n        this.onMessage(data.data, resolve, reject),\r\n      );\r\n    });\r\n  }\r\n}\r\n","import {IntlShape} from 'react-intl';\r\nimport {TopolaError} from './error';\r\n\r\n/**\r\n * Returns a translated message for the given error. If the message can't be\r\n * translated, the original error.message is returned.\r\n */\r\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\r\n  if (!(error instanceof TopolaError)) {\r\n    return error.message;\r\n  }\r\n  return intl.formatMessage(\r\n    {\r\n      id: `error.${error.code}`,\r\n      defaultMessage: error.message,\r\n    },\r\n    error.args,\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import {createMedia} from '@artsy/fresnel';\r\n\r\n/** Defines the breakpoints at which to show different UI variants.*/\r\nconst AppMedia = createMedia({\r\n  breakpoints: {\r\n    small: 320,\r\n    large: 768,\r\n  },\r\n});\r\nexport const mediaStyles = AppMedia.createMediaStyle();\r\nexport const {Media, MediaContextProvider} = AppMedia;\r\n","import {\r\n  Menu,\r\n  Dropdown,\r\n  MenuItemProps,\r\n  DropdownItemProps,\r\n} from 'semantic-ui-react';\r\n\r\nexport enum MenuType {\r\n  Menu,\r\n  Dropdown,\r\n}\r\n\r\ninterface Props {\r\n  menuType?: MenuType;\r\n}\r\n\r\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\r\n  const newProps = {...props};\r\n  // Remove menuType from props to avoid error message in the console.\r\n  delete newProps.menuType;\r\n  return (\r\n    <>\r\n      {props.menuType === MenuType.Menu ? (\r\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\r\n      ) : (\r\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import lunr, {PipelineFunction} from 'lunr';\r\nimport naturalSort from 'javascript-natural-sort';\r\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\r\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\r\n\r\n// TODO: Add type declarations and use import instead of require.\r\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\r\nrequire('lunr-languages/lunr.de')(lunr);\r\nrequire('lunr-languages/lunr.fr')(lunr);\r\nrequire('lunr-languages/lunr.it')(lunr);\r\nrequire('lunr-languages/lunr.ru')(lunr);\r\n\r\nconst MAX_RESULTS = 8;\r\n\r\nexport interface SearchResult {\r\n  id: string;\r\n  indi: JsonIndi;\r\n}\r\n\r\nexport interface SearchIndex {\r\n  search(input: string): SearchResult[];\r\n}\r\n\r\n/** Removes accents from letters, e.g. ó->o, ę->e. */\r\nfunction normalize(input: string) {\r\n  return input\r\n    .toLocaleLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\r\n}\r\n\r\n/** Comparator to sort by score first, then by id. */\r\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\r\n  if (a.score !== b.score) {\r\n    return b.score - a.score;\r\n  }\r\n  return naturalSort(a.ref, b.ref);\r\n}\r\n\r\n/** Returns all last names of all husbands as a space-separated string. */\r\nfunction getHusbandLastName(\r\n  indi: JsonIndi,\r\n  indiMap: Map<String, JsonIndi>,\r\n  famMap: Map<string, JsonFam>,\r\n): string {\r\n  return (indi.fams || [])\r\n    .map((famId) => famMap.get(famId))\r\n    .map((fam) => fam && fam.husb)\r\n    .map((husbId) => husbId && indiMap.get(husbId))\r\n    .map((husband) => husband && husband.lastName)\r\n    .join(' ');\r\n}\r\n\r\nclass LunrSearchIndex implements SearchIndex {\r\n  private index: lunr.Index | undefined;\r\n  private indiMap: Map<string, JsonIndi>;\r\n  private famMap: Map<string, JsonFam>;\r\n\r\n  constructor(data: JsonGedcomData) {\r\n    this.indiMap = idToIndiMap(data);\r\n    this.famMap = idToFamMap(data);\r\n  }\r\n\r\n  initialize() {\r\n    const self = this;\r\n    this.index = lunr(function () {\r\n      //Trimmer will break non-latin characters, so custom multilingual implementation must be used\r\n      self.initMultiLingualLunrWithoutTrimmer(this, [\r\n        'de',\r\n        'en',\r\n        'fr',\r\n        'it',\r\n        'ru',\r\n      ]);\r\n      this.ref('id');\r\n      this.field('id');\r\n      this.field('name', {boost: 10});\r\n      this.field('normalizedName', {boost: 8});\r\n      this.field('spouseLastName', {boost: 2});\r\n      this.field('normalizedSpouseLastName', {boost: 2});\r\n\r\n      self.indiMap.forEach((indi) => {\r\n        const name = [indi.firstName, indi.lastName].join(' ');\r\n        const spouseLastName = getHusbandLastName(\r\n          indi,\r\n          self.indiMap,\r\n          self.famMap,\r\n        );\r\n        this.add({\r\n          id: indi.id,\r\n          name,\r\n          normalizedName: normalize(name),\r\n          spouseLastName,\r\n          normalizedSpouseLastName: normalize(spouseLastName),\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private initMultiLingualLunrWithoutTrimmer(\r\n    lunrInstance: any,\r\n    languages: string[],\r\n  ): void {\r\n    let wordCharacters = '';\r\n    const pipelineFunctions: PipelineFunction[] = [];\r\n    const searchPipelineFunctions: PipelineFunction[] = [];\r\n    languages.forEach((language) => {\r\n      if (language === 'en') {\r\n        wordCharacters += '\\\\w';\r\n        pipelineFunctions.unshift(lunr.stopWordFilter);\r\n        pipelineFunctions.push(lunr.stemmer);\r\n        searchPipelineFunctions.push(lunr.stemmer);\r\n      } else {\r\n        wordCharacters += lunr[language].wordCharacters;\r\n        if (lunr[language].stopWordFilter) {\r\n          pipelineFunctions.unshift(lunr[language].stopWordFilter);\r\n        }\r\n        if (lunr[language].stemmer) {\r\n          pipelineFunctions.push(lunr[language].stemmer);\r\n          searchPipelineFunctions.push(lunr[language].stemmer);\r\n        }\r\n      }\r\n    });\r\n    lunrInstance.pipeline.reset();\r\n    lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\r\n\r\n    if (lunrInstance.searchPipeline) {\r\n      lunrInstance.searchPipeline.reset();\r\n      lunrInstance.searchPipeline.add.apply(\r\n        lunrInstance.searchPipeline,\r\n        searchPipelineFunctions,\r\n      );\r\n    }\r\n  }\r\n\r\n  public search(input: string): SearchResult[] {\r\n    const query = input\r\n      .split(' ')\r\n      .filter((s) => !!s)\r\n      .map((s) => `${s} ${s}*`)\r\n      .join(' ');\r\n    const results = this.index!.search(query);\r\n    return results\r\n      .sort(compare)\r\n      .slice(0, MAX_RESULTS)\r\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\r\n  }\r\n}\r\n\r\n/** Builds a search index from data. */\r\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\r\n  const index = new LunrSearchIndex(data);\r\n  index.initialize();\r\n  return index;\r\n}\r\n","import debounce from 'debounce';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\r\nimport {formatDateOrRange} from '../util/date_util';\r\nimport {IndiInfo, JsonGedcomData} from 'topola';\r\nimport {JsonIndi} from 'topola';\r\nimport {Search, SearchResultProps} from 'semantic-ui-react';\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {useIntl} from 'react-intl';\r\n\r\nfunction getNameLine(result: SearchResult) {\r\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\r\n  if (result.id.length > 8) {\r\n    return name;\r\n  }\r\n  return (\r\n    <>\r\n      {name} <i>({result.id})</i>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  /** Data used for the search index. */\r\n  data: JsonGedcomData;\r\n  onSelection: (indiInfo: IndiInfo) => void;\r\n}\r\n\r\n/** Displays and handles the search box in the top bar. */\r\nexport function SearchBar(props: Props) {\r\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\r\n  const [searchString, setSearchString] = useState('');\r\n  const searchIndex = useRef<SearchIndex>();\r\n  const intl = useIntl();\r\n\r\n  function getDescriptionLine(indi: JsonIndi) {\r\n    const birthDate = formatDateOrRange(indi.birth, intl);\r\n    const deathDate = formatDateOrRange(indi.death, intl);\r\n    if (!deathDate) {\r\n      return birthDate;\r\n    }\r\n    return `${birthDate} – ${deathDate}`;\r\n  }\r\n\r\n  /** Produces an object that is displayed in the Semantic UI Search results. */\r\n  function displaySearchResult(result: SearchResult): SearchResultProps {\r\n    return {\r\n      id: result.id,\r\n      key: result.id,\r\n      title: getNameLine(result),\r\n      description: getDescriptionLine(result.indi),\r\n    } as SearchResultProps;\r\n  }\r\n\r\n  /** On search input change. */\r\n  function handleSearch(input: string | undefined) {\r\n    if (!input) {\r\n      return;\r\n    }\r\n    const results = searchIndex\r\n      .current!.search(input)\r\n      .map((result) => displaySearchResult(result));\r\n    setSearchResults(results);\r\n  }\r\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\r\n\r\n  /** On search result selected. */\r\n  function handleResultSelect(id: string) {\r\n    analyticsEvent('search_result_selected');\r\n    props.onSelection({id, generation: 0});\r\n    setSearchString('');\r\n  }\r\n\r\n  /** On search string changed. */\r\n  function onChange(value: string) {\r\n    debouncedHandleSearch.current(value);\r\n    setSearchString(value);\r\n  }\r\n\r\n  // Initialize the search index.\r\n  useEffect(() => {\r\n    searchIndex.current = buildSearchIndex(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Search\r\n      onSearchChange={(_, data) => onChange(data.value!)}\r\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\r\n      results={searchResults}\r\n      noResultsMessage={intl.formatMessage({\r\n        id: 'menu.search.no_results',\r\n        defaultMessage: 'No results found',\r\n      })}\r\n      placeholder={intl.formatMessage({\r\n        id: 'menu.search.placeholder',\r\n        defaultMessage: 'Search for people',\r\n      })}\r\n      selectFirstResult={true}\r\n      value={searchString}\r\n      id=\"search\"\r\n    />\r\n  );\r\n}\r\n","import * as queryString from 'query-string';\r\nimport md5 from 'md5';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {MenuType} from './menu_item';\r\nimport {SyntheticEvent} from 'react';\r\nimport {useHistory, useLocation} from 'react-router';\r\nimport {loadFile} from '../datasource/load_data';\r\n\r\nfunction isImageFileName(fileName: string) {\r\n  const lower = fileName.toLowerCase();\r\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\r\n}\r\n\r\ninterface Props {\r\n  menuType: MenuType;\r\n}\r\n\r\n/** Displays and handles the \"Open file\" menu. */\r\nexport function UploadMenu(props: Props) {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    if (!files || !files.length) {\r\n      return;\r\n    }\r\n    const filesArray = Array.from(files);\r\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\r\n    analyticsEvent('upload_files_selected', {\r\n      event_value: files.length,\r\n    });\r\n\r\n    const gedcomFile =\r\n      filesArray.length === 1\r\n        ? filesArray[0]\r\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\r\n          filesArray[0];\r\n    const {gedcom, images} = await loadFile(gedcomFile);\r\n\r\n    // Convert uploaded images to object URLs.\r\n    filesArray\r\n      .filter(\r\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\r\n      )\r\n      .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\r\n\r\n    // Hash GEDCOM contents with uploaded image file names.\r\n    const imageFileNames = Array.from(images.keys()).sort().join('|');\r\n    const hash = md5(md5(gedcom) + imageFileNames);\r\n\r\n    // Use history.replace() when reuploading the same file and history.push() when loading\r\n    // a new file.\r\n    const search = queryString.parse(location.search);\r\n    const historyPush = search.file === hash ? history.replace : history.push;\r\n\r\n    historyPush({\r\n      pathname: '/view',\r\n      search: queryString.stringify({file: hash}),\r\n      state: {data: gedcom, images},\r\n    });\r\n  }\r\n\r\n  const content = (\r\n    <>\r\n      <Icon name=\"folder open\" />\r\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      {props.menuType === MenuType.Menu ? (\r\n        <label htmlFor=\"fileInput\">\r\n          <Menu.Item as=\"a\">{content}</Menu.Item>\r\n        </label>\r\n      ) : (\r\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\r\n          {content}\r\n        </Dropdown.Item>\r\n      )}\r\n      <input\r\n        className=\"hidden\"\r\n        type=\"file\"\r\n        accept=\".ged,.gdz,.gedzip,.zip,image/*\"\r\n        id=\"fileInput\"\r\n        multiple\r\n        onChange={handleUpload}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import * as queryString from 'query-string';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {MenuItem, MenuType} from './menu_item';\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {useHistory} from 'react-router';\r\n\r\ninterface Props {\r\n  menuType: MenuType;\r\n}\r\n\r\n/** Displays and handles the \"Open URL\" menu. */\r\nexport function UrlMenu(props: Props) {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [url, setUrl] = useState('');\r\n  const inputRef = useRef<Input>(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (dialogOpen) {\r\n      setUrl('');\r\n      inputRef.current!.focus();\r\n    }\r\n  }, [dialogOpen]);\r\n\r\n  /** Load button clicked in the \"Load from URL\" dialog. */\r\n  function handleLoad() {\r\n    setDialogOpen(false);\r\n    if (url) {\r\n      analyticsEvent('url_selected');\r\n      history.push({\r\n        pathname: '/view',\r\n        search: queryString.stringify({url}),\r\n      });\r\n    }\r\n  }\r\n\r\n  function loadFromUrlModal() {\r\n    return (\r\n      <Modal\r\n        open={dialogOpen}\r\n        onClose={() => setDialogOpen(false)}\r\n        centered={false}\r\n      >\r\n        <Header>\r\n          <Icon name=\"cloud download\" />\r\n          <FormattedMessage\r\n            id=\"load_from_url.title\"\r\n            defaultMessage=\"Load from URL\"\r\n          />\r\n        </Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={handleLoad}>\r\n            <Input\r\n              placeholder=\"https://\"\r\n              fluid\r\n              value={url}\r\n              onChange={(_, data) => setUrl(data.value)}\r\n              ref={inputRef}\r\n            />\r\n            <p>\r\n              <FormattedMessage\r\n                id=\"load_from_url.comment\"\r\n                defaultMessage={\r\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\r\n                }\r\n                values={{\r\n                  link: (\r\n                    <a href=\"https://topolaproxy.bieda.it/\">\r\n                      topolaproxy.bieda.it (cors-anywhere proxy)\r\n                    </a>\r\n                  ),\r\n                }}\r\n              />\r\n            </p>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button secondary onClick={() => setDialogOpen(false)}>\r\n            <FormattedMessage\r\n              id=\"load_from_url.cancel\"\r\n              defaultMessage=\"Cancel\"\r\n            />\r\n          </Button>\r\n          <Button primary onClick={handleLoad}>\r\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\r\n        <Icon name=\"cloud download\" />\r\n        <FormattedMessage\r\n          id=\"menu.load_from_url\"\r\n          defaultMessage=\"Load from URL\"\r\n        />\r\n      </MenuItem>\r\n      {loadFromUrlModal()}\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import * as queryString from 'query-string';\r\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {IndiInfo, JsonGedcomData} from 'topola';\r\nimport {Link} from 'react-router-dom';\r\nimport {Media} from '../util/media';\r\nimport {MenuType} from './menu_item';\r\nimport {SearchBar} from './search';\r\nimport {UploadMenu} from './upload_menu';\r\nimport {UrlMenu} from './url_menu';\r\nimport {useHistory, useLocation} from 'react-router';\r\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\r\n\r\nenum ScreenSize {\r\n  LARGE,\r\n  SMALL,\r\n}\r\n\r\ninterface EventHandlers {\r\n  onSelection: (indiInfo: IndiInfo) => void;\r\n  onPrint: () => void;\r\n  onDownloadPdf: () => void;\r\n  onDownloadPng: () => void;\r\n  onDownloadSvg: () => void;\r\n}\r\n\r\ninterface Props {\r\n  /** True if the application is currently showing a chart. */\r\n  showingChart: boolean;\r\n  /** Data used for the search index. */\r\n  data?: JsonGedcomData;\r\n  standalone: boolean;\r\n  /** Whether to show the \"All relatives\" chart type in the menu. */\r\n  allowAllRelativesChart: boolean;\r\n  eventHandlers: EventHandlers;\r\n  /** Whether to show additional WikiTree menus. */\r\n  showWikiTreeMenus: boolean;\r\n}\r\n\r\nexport function TopBar(props: Props) {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  function changeView(view: string) {\r\n    const search = queryString.parse(location.search);\r\n    if (search.view !== view) {\r\n      search.view = view;\r\n      location.search = queryString.stringify(search);\r\n      history.push(location);\r\n    }\r\n  }\r\n\r\n  function chartMenus(screenSize: ScreenSize) {\r\n    if (!props.showingChart) {\r\n      return null;\r\n    }\r\n    const chartTypeItems = (\r\n      <>\r\n        <Dropdown.Item onClick={() => changeView('hourglass')}>\r\n          <Icon name=\"hourglass\" />\r\n          <FormattedMessage\r\n            id=\"menu.hourglass\"\r\n            defaultMessage=\"Hourglass chart\"\r\n          />\r\n        </Dropdown.Item>\r\n        {props.allowAllRelativesChart ? (\r\n          <Dropdown.Item onClick={() => changeView('relatives')}>\r\n            <Icon name=\"users\" />\r\n            <FormattedMessage\r\n              id=\"menu.relatives\"\r\n              defaultMessage=\"All relatives\"\r\n            />\r\n          </Dropdown.Item>\r\n        ) : null}\r\n        <Dropdown.Item onClick={() => changeView('fancy')}>\r\n          <Icon name=\"users\" />\r\n          <FormattedMessage\r\n            id=\"menu.fancy\"\r\n            defaultMessage=\"Fancy tree (experimental)\"\r\n          />\r\n        </Dropdown.Item>\r\n      </>\r\n    );\r\n    switch (screenSize) {\r\n      case ScreenSize.LARGE:\r\n        return (\r\n          <>\r\n            <Menu.Item onClick={props.eventHandlers.onPrint}>\r\n              <Icon name=\"print\" />\r\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\r\n            </Menu.Item>\r\n\r\n            <Dropdown\r\n              trigger={\r\n                <div>\r\n                  <Icon name=\"download\" />\r\n                  <FormattedMessage\r\n                    id=\"menu.download\"\r\n                    defaultMessage=\"Download\"\r\n                  />\r\n                </div>\r\n              }\r\n              className=\"item\"\r\n            >\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\r\n                  <FormattedMessage\r\n                    id=\"menu.pdf_file\"\r\n                    defaultMessage=\"PDF file\"\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\r\n                  <FormattedMessage\r\n                    id=\"menu.png_file\"\r\n                    defaultMessage=\"PNG file\"\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\r\n                  <FormattedMessage\r\n                    id=\"menu.svg_file\"\r\n                    defaultMessage=\"SVG file\"\r\n                  />\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Dropdown\r\n              trigger={\r\n                <div>\r\n                  <Icon name=\"eye\" />\r\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\r\n                </div>\r\n              }\r\n              className=\"item\"\r\n            >\r\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\r\n            </Dropdown>\r\n            <SearchBar\r\n              data={props.data!}\r\n              onSelection={props.eventHandlers.onSelection}\r\n              {...props}\r\n            />\r\n          </>\r\n        );\r\n\r\n      case ScreenSize.SMALL:\r\n        return (\r\n          <>\r\n            <Dropdown.Item onClick={props.eventHandlers.onPrint}>\r\n              <Icon name=\"print\" />\r\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n\r\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\r\n              <Icon name=\"download\" />\r\n              <FormattedMessage\r\n                id=\"menu.download_pdf\"\r\n                defaultMessage=\"Download PDF\"\r\n              />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\r\n              <Icon name=\"download\" />\r\n              <FormattedMessage\r\n                id=\"menu.download_png\"\r\n                defaultMessage=\"Download PNG\"\r\n              />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\r\n              <Icon name=\"download\" />\r\n              <FormattedMessage\r\n                id=\"menu.download_svg\"\r\n                defaultMessage=\"Download SVG\"\r\n              />\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            {chartTypeItems}\r\n            <Dropdown.Divider />\r\n          </>\r\n        );\r\n    }\r\n  }\r\n\r\n  function title() {\r\n    return (\r\n      <Menu.Item>\r\n        <b>Topola Genealogy</b>\r\n      </Menu.Item>\r\n    );\r\n  }\r\n\r\n  function fileMenus(screenSize: ScreenSize) {\r\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\r\n    if (!props.standalone && props.showWikiTreeMenus) {\r\n      switch (screenSize) {\r\n        case ScreenSize.LARGE:\r\n          return <WikiTreeMenu menuType={MenuType.Menu} {...props} />;\r\n        case ScreenSize.SMALL:\r\n          return (\r\n            <>\r\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\r\n              <Dropdown.Divider />\r\n            </>\r\n          );\r\n      }\r\n    }\r\n\r\n    // Don't show \"open\" menus in non-standalone mode.\r\n    if (!props.standalone) {\r\n      return null;\r\n    }\r\n\r\n    switch (screenSize) {\r\n      case ScreenSize.LARGE:\r\n        // Show dropdown if chart is shown, otherwise show individual menu\r\n        // items.\r\n        const menus = props.showingChart ? (\r\n          <Dropdown\r\n            trigger={\r\n              <div>\r\n                <Icon name=\"folder open\" />\r\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\r\n              </div>\r\n            }\r\n            className=\"item\"\r\n          >\r\n            <Dropdown.Menu>\r\n              <UploadMenu menuType={MenuType.Dropdown} {...props} />\r\n              <UrlMenu menuType={MenuType.Dropdown} {...props} />\r\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        ) : (\r\n          <>\r\n            <UploadMenu menuType={MenuType.Menu} {...props} />\r\n            <UrlMenu menuType={MenuType.Menu} {...props} />\r\n            <WikiTreeMenu menuType={MenuType.Menu} {...props} />\r\n          </>\r\n        );\r\n        return menus;\r\n\r\n      case ScreenSize.SMALL:\r\n        return (\r\n          <>\r\n            <UploadMenu menuType={MenuType.Dropdown} {...props} />\r\n            <UrlMenu menuType={MenuType.Dropdown} {...props} />\r\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\r\n            <Dropdown.Divider />\r\n          </>\r\n        );\r\n    }\r\n  }\r\n\r\n  function wikiTreeLoginMenu(screenSize: ScreenSize) {\r\n    if (!props.showWikiTreeMenus) {\r\n      return null;\r\n    }\r\n    return (\r\n      <>\r\n        <WikiTreeLoginMenu\r\n          menuType={\r\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\r\n          }\r\n          {...props}\r\n        />\r\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function mobileMenus() {\r\n    return (\r\n      <>\r\n        <Dropdown\r\n          trigger={\r\n            <div>\r\n              <Icon name=\"sidebar\" />\r\n            </div>\r\n          }\r\n          className=\"item\"\r\n          icon={null}\r\n        >\r\n          <Dropdown.Menu>\r\n            {fileMenus(ScreenSize.SMALL)}\r\n            {chartMenus(ScreenSize.SMALL)}\r\n            {wikiTreeLoginMenu(ScreenSize.SMALL)}\r\n\r\n            <Dropdown.Item\r\n              href=\"https://github.com/PeWu/topola-viewer\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FormattedMessage\r\n                id=\"menu.github\"\r\n                defaultMessage=\"GitHub project\"\r\n              />\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : title()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function desktopMenus() {\r\n    return (\r\n      <>\r\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : null}\r\n        {fileMenus(ScreenSize.LARGE)}\r\n        {chartMenus(ScreenSize.LARGE)}\r\n        <Menu.Menu position=\"right\">\r\n          {wikiTreeLoginMenu(ScreenSize.LARGE)}\r\n          <Menu.Item\r\n            href=\"https://github.com/PeWu/topola-viewer\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FormattedMessage\r\n              id=\"menu.github\"\r\n              defaultMessage=\"GitHub project\"\r\n            />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        as={Media}\r\n        greaterThanOrEqual=\"large\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"blue\"\r\n        size=\"large\"\r\n      >\r\n        {desktopMenus()}\r\n      </Menu>\r\n      <Menu\r\n        as={Media}\r\n        at=\"small\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"blue\"\r\n        size=\"large\"\r\n      >\r\n        {mobileMenus()}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import * as queryString from 'query-string';\r\nimport wikitreeLogo from './wikitree.png';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {Button, Form, Header, Input, Modal} from 'semantic-ui-react';\r\nimport {FormattedMessage, useIntl} from 'react-intl';\r\nimport {MenuItem, MenuType} from './menu_item';\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {useHistory, useLocation} from 'react-router';\r\nimport {getLoggedInUserName, navigateToLoginPage} from 'wikitree-js';\r\n\r\ninterface Props {\r\n  menuType: MenuType;\r\n}\r\n\r\n/** Displays and handles the \"Select WikiTree ID\" menu. */\r\nexport function WikiTreeMenu(props: Props) {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [wikiTreeId, setWikiTreeId] = useState('');\r\n  const inputRef = useRef<Input>(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (dialogOpen) {\r\n      setWikiTreeId('');\r\n      inputRef.current!.focus();\r\n    }\r\n  }, [dialogOpen]);\r\n\r\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\r\n  function handleSelectId() {\r\n    setDialogOpen(false);\r\n    if (!wikiTreeId) {\r\n      return;\r\n    }\r\n    analyticsEvent('wikitree_id_selected');\r\n    const search = queryString.parse(location.search);\r\n    const standalone =\r\n      search.standalone !== undefined ? search.standalone : true;\r\n    history.push({\r\n      pathname: '/view',\r\n      search: queryString.stringify({\r\n        indi: wikiTreeId,\r\n        source: 'wikitree',\r\n        standalone,\r\n      }),\r\n    });\r\n  }\r\n\r\n  function enterId(event: React.MouseEvent, id: string) {\r\n    event.preventDefault(); // Do not follow link in href.\r\n    setWikiTreeId(id);\r\n    inputRef.current!.focus();\r\n  }\r\n\r\n  function wikiTreeIdModal() {\r\n    return (\r\n      <Modal\r\n        open={dialogOpen}\r\n        onClose={() => setDialogOpen(false)}\r\n        centered={false}\r\n      >\r\n        <Header>\r\n          <img\r\n            src={wikitreeLogo}\r\n            alt=\"WikiTree logo\"\r\n            style={{width: '32px', height: '32px'}}\r\n          />\r\n          <FormattedMessage\r\n            id=\"select_wikitree_id.title\"\r\n            defaultMessage=\"Select WikiTree ID\"\r\n          />\r\n        </Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={handleSelectId}>\r\n            <p>\r\n              <FormattedMessage\r\n                id=\"select_wikitree_id.comment\"\r\n                defaultMessage={\r\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\r\n                }\r\n                values={{\r\n                  wikiTreeLink: (\r\n                    <a\r\n                      href=\"https://wikitree.com/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      WikiTree\r\n                    </a>\r\n                  ),\r\n                  example1: (\r\n                    <span\r\n                      onClick={(e) => enterId(e, 'Wojtyla-13')}\r\n                      className=\"link-span\"\r\n                    >\r\n                      Wojtyla-13\r\n                    </span>\r\n                  ),\r\n                  example2: (\r\n                    <span\r\n                      onClick={(e) => enterId(e, 'Skłodowska-2')}\r\n                      className=\"link-span\"\r\n                    >\r\n                      Skłodowska-2\r\n                    </span>\r\n                  ),\r\n                }}\r\n              />\r\n            </p>\r\n            <Input\r\n              fluid\r\n              value={wikiTreeId}\r\n              onChange={(_, data) => setWikiTreeId(data.value)}\r\n              ref={inputRef}\r\n            />\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button secondary onClick={() => setDialogOpen(false)}>\r\n            <FormattedMessage\r\n              id=\"select_wikitree_id.cancel\"\r\n              defaultMessage=\"Cancel\"\r\n            />\r\n          </Button>\r\n          <Button primary onClick={handleSelectId}>\r\n            <FormattedMessage\r\n              id=\"select_wikitree_id.load\"\r\n              defaultMessage=\"Load\"\r\n            />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuItem menuType={props.menuType} onClick={() => setDialogOpen(true)}>\r\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\r\n        <FormattedMessage\r\n          id=\"menu.select_wikitree_id\"\r\n          defaultMessage=\"Select WikiTree ID\"\r\n        />\r\n      </MenuItem>\r\n      {wikiTreeIdModal()}\r\n    </>\r\n  );\r\n}\r\n\r\n/** Displays and handles the \"Log in to WikiTree\" menu. */\r\nexport function WikiTreeLoginMenu(props: Props) {\r\n  const intl = useIntl();\r\n\r\n  /**\r\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\r\n   * Topola Viewer hosted on apps.wikitree.com.\r\n   */\r\n  function login() {\r\n    const wikiTreeTopolaUrl =\r\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\r\n    // TODO: remove authcode if it is in the current URL.\r\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}`;\r\n    navigateToLoginPage(returnUrl);\r\n  }\r\n\r\n  const username = getLoggedInUserName();\r\n  if (!username) {\r\n    return (\r\n      <>\r\n        <MenuItem menuType={props.menuType} onClick={login}>\r\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\r\n          <FormattedMessage\r\n            id=\"menu.wikitree_login\"\r\n            defaultMessage=\"Log in to WikiTree\"\r\n          />\r\n        </MenuItem>\r\n      </>\r\n    );\r\n  }\r\n  const tooltip = intl.formatMessage(\r\n    {\r\n      id: 'menu.wikitree_popup_username',\r\n      defaultMessage: 'Logged in to WikiTree as {username}',\r\n    },\r\n    {username},\r\n  );\r\n  return (\r\n    <MenuItem menuType={props.menuType} title={tooltip}>\r\n      <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\r\n      <FormattedMessage\r\n        id=\"menu.wikitree_logged_in\"\r\n        defaultMessage=\"Logged in\"\r\n      />\r\n    </MenuItem>\r\n  );\r\n}\r\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {ParsedQuery} from 'query-string';\r\n\r\nexport enum ChartColors {\r\n  NO_COLOR,\r\n  COLOR_BY_SEX,\r\n  COLOR_BY_GENERATION,\r\n}\r\n\r\nexport enum Ids {\r\n  HIDE,\r\n  SHOW,\r\n}\r\n\r\nexport enum Sex {\r\n  HIDE,\r\n  SHOW,\r\n}\r\n\r\nexport interface Config {\r\n  color: ChartColors;\r\n  id: Ids;\r\n  sex: Sex;\r\n}\r\n\r\nexport const DEFALUT_CONFIG: Config = {\r\n  color: ChartColors.COLOR_BY_GENERATION,\r\n  id: Ids.SHOW,\r\n  sex: Sex.SHOW,\r\n};\r\n\r\nconst COLOR_ARG = new Map<string, ChartColors>([\r\n  ['n', ChartColors.NO_COLOR],\r\n  ['g', ChartColors.COLOR_BY_GENERATION],\r\n  ['s', ChartColors.COLOR_BY_SEX],\r\n]);\r\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\r\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\r\n\r\nconst ID_ARG = new Map<string, Ids>([\r\n  ['h', Ids.HIDE],\r\n  ['s', Ids.SHOW],\r\n]);\r\nconst ID_ARG_INVERSE = new Map<Ids, string>();\r\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\r\n\r\nconst SEX_ARG = new Map<string, Sex>([\r\n  ['h', Sex.HIDE],\r\n  ['s', Sex.SHOW],\r\n]);\r\nconst SEX_ARG_INVERSE = new Map<Sex, string>();\r\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\r\n\r\nexport function argsToConfig(args: ParsedQuery<any>): Config {\r\n  const getParam = (name: string) => {\r\n    const value = args[name];\r\n    return typeof value === 'string' ? value : undefined;\r\n  };\r\n\r\n  return {\r\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\r\n    id: ID_ARG.get(getParam('i') ?? '') ?? DEFALUT_CONFIG.id,\r\n    sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFALUT_CONFIG.sex,\r\n  };\r\n}\r\n\r\nexport function configToArgs(config: Config): ParsedQuery<any> {\r\n  return {\r\n    c: COLOR_ARG_INVERSE.get(config.color),\r\n    i: ID_ARG_INVERSE.get(config.id),\r\n    s: SEX_ARG_INVERSE.get(config.sex),\r\n  };\r\n}\r\n\r\nexport function ConfigPanel(props: {\r\n  config: Config;\r\n  onChange: (config: Config) => void;\r\n}) {\r\n  return (\r\n    <Form className=\"details\">\r\n      <Item.Group>\r\n        <Item>\r\n          <Item.Content>\r\n            <Header sub>\r\n              <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\r\n            </Header>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.colors.NO_COLOR\"\r\n                    defaultMessage=\"none\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"none\"\r\n                checked={props.config.color === ChartColors.NO_COLOR}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, color: ChartColors.NO_COLOR})\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.colors.COLOR_BY_GENERATION\"\r\n                    defaultMessage=\"by generation\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"generation\"\r\n                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, color: ChartColors.COLOR_BY_GENERATION})\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.colors.COLOR_BY_SEX\"\r\n                    defaultMessage=\"by sex\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"gender\"\r\n                checked={props.config.color === ChartColors.COLOR_BY_SEX}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, color: ChartColors.COLOR_BY_SEX})\r\n                }\r\n              />\r\n            </Form.Field>\r\n          </Item.Content>\r\n        </Item>\r\n        <Item>\r\n        <Item.Content>\r\n            <Header sub>\r\n              <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\" />\r\n            </Header>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.ids.HIDE\"\r\n                    defaultMessage=\"hide\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"hide\"\r\n                checked={props.config.id === Ids.HIDE}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, id: Ids.HIDE})\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.ids.SHOW\"\r\n                    defaultMessage=\"show\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"show\"\r\n                checked={props.config.id === Ids.SHOW}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, id: Ids.SHOW})\r\n                }\r\n              />\r\n            </Form.Field>\r\n          </Item.Content>\r\n        </Item>\r\n        <Item>\r\n        <Item.Content>\r\n            <Header sub>\r\n              <FormattedMessage id=\"config.sex\" defaultMessage=\"Sex\" />\r\n            </Header>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.sex.HIDE\"\r\n                    defaultMessage=\"hide\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"hide\"\r\n                checked={props.config.sex === Sex.HIDE}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, sex: Sex.HIDE})\r\n                }\r\n              />\r\n            </Form.Field>\r\n            <Form.Field className=\"no-margin\">\r\n              <Checkbox\r\n                radio\r\n                label={\r\n                  <FormattedMessage\r\n                    tagName=\"label\"\r\n                    id=\"config.sex.SHOW\"\r\n                    defaultMessage=\"show\"\r\n                  />\r\n                }\r\n                name=\"checkboxRadioGroup\"\r\n                value=\"show\"\r\n                checked={props.config.sex === Sex.SHOW}\r\n                onClick={() =>\r\n                  props.onChange({...props.config, sex: Sex.SHOW})\r\n                }\r\n              />\r\n            </Form.Field>\r\n          </Item.Content>\r\n        </Item>\r\n      </Item.Group>\r\n    </Form>\r\n  );\r\n}\r\n","import {ChartColors, Ids, Sex} from './config';\r\nimport {interpolateNumber} from 'd3-interpolate';\r\nimport {IntlShape, useIntl} from 'react-intl';\r\nimport {max, min} from 'd3-array';\r\nimport {Media} from './util/media';\r\nimport {saveAs} from 'file-saver';\r\nimport {select, Selection} from 'd3-selection';\r\nimport {useEffect, useRef} from 'react';\r\nimport 'd3-transition';\r\nimport {\r\n  D3ZoomEvent,\r\n  zoom,\r\n  ZoomBehavior,\r\n  ZoomedElementBaseType,\r\n  zoomTransform,\r\n} from 'd3-zoom';\r\nimport {\r\n  JsonGedcomData,\r\n  ChartHandle,\r\n  IndiInfo,\r\n  createChart,\r\n  DetailedRenderer,\r\n  HourglassChart,\r\n  RelativesChart,\r\n  FancyChart,\r\n  CircleRenderer,\r\n  ChartColors as TopolaChartColors,\r\n} from 'topola';\r\n\r\n/** How much to zoom when using the +/- buttons. */\r\nconst ZOOM_FACTOR = 1.3;\r\n\r\n/**\r\n * Called when the view is dragged with the mouse.\r\n *\r\n * @param size the size of the chart\r\n */\r\nfunction zoomed(\r\n  size: [number, number],\r\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\r\n) {\r\n  const parent = select('#svgContainer').node() as Element;\r\n\r\n  const scale = event.transform.k;\r\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\r\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\r\n  select('#chartSvg')\r\n    .attr('width', size[0] * scale)\r\n    .attr('height', size[1] * scale)\r\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\r\n  select('#chart').attr('transform', `scale(${scale})`);\r\n\r\n  parent.scrollLeft = -event.transform.x;\r\n  parent.scrollTop = -event.transform.y;\r\n}\r\n\r\n/** Called when the scrollbars are used. */\r\nfunction scrolled() {\r\n  const parent = select('#svgContainer').node() as Element;\r\n  const x = parent.scrollLeft + parent.clientWidth / 2;\r\n  const y = parent.scrollTop + parent.clientHeight / 2;\r\n  const scale = zoomTransform(parent).k;\r\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\r\n}\r\n\r\n/** Loads blob as data URL. */\r\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(blob);\r\n  return new Promise<string>((resolve, reject) => {\r\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\r\n  });\r\n}\r\n\r\nasync function inlineImage(image: SVGImageElement) {\r\n  const href = image.href.baseVal;\r\n  if (!href) {\r\n    return;\r\n  }\r\n  try {\r\n    const response = await fetch(href);\r\n    const blob = await response.blob();\r\n    const dataUrl = await loadAsDataUrl(blob);\r\n    image.href.baseVal = dataUrl;\r\n  } catch (e) {\r\n    console.warn('Failed to load image:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches all images in the SVG and replaces them with inlined images as data\r\n * URLs. Images are replaced in place. The replacement is done, the returned\r\n * promise is resolved.\r\n */\r\nasync function inlineImages(svg: Element): Promise<void> {\r\n  const images = Array.from(svg.getElementsByTagName('image'));\r\n  await Promise.all(images.map(inlineImage));\r\n}\r\n\r\n/** Loads a blob into an image object. */\r\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\r\n  const image = new Image();\r\n  image.src = URL.createObjectURL(blob);\r\n  return new Promise<HTMLImageElement>((resolve, reject) => {\r\n    image.addEventListener('load', () => resolve(image));\r\n  });\r\n}\r\n\r\n/** Draw image on a new canvas and return the canvas. */\r\nfunction drawImageOnCanvas(image: HTMLImageElement) {\r\n  const canvas = document.createElement('canvas');\r\n  // Scale image for better quality.\r\n  canvas.width = image.width * 2;\r\n  canvas.height = image.height * 2;\r\n\r\n  const ctx = canvas.getContext('2d')!;\r\n  const oldFill = ctx.fillStyle;\r\n  ctx.fillStyle = 'white';\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  ctx.fillStyle = oldFill;\r\n\r\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n  return canvas;\r\n}\r\n\r\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\r\n  return new Promise<Blob>((resolve, reject) => {\r\n    canvas.toBlob((blob) => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject();\r\n      }\r\n    }, type);\r\n  });\r\n}\r\n\r\n/** Return a copy of the SVG chart but without scaling and positioning. */\r\nfunction getStrippedSvg() {\r\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\r\n\r\n  svg.removeAttribute('transform');\r\n  const parent = select('#svgContainer').node() as Element;\r\n  const scale = zoomTransform(parent).k;\r\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\r\n  svg.setAttribute(\r\n    'height',\r\n    String(Number(svg.getAttribute('height')) / scale),\r\n  );\r\n  svg.querySelector('#chart')!.removeAttribute('transform');\r\n\r\n  return svg;\r\n}\r\n\r\nfunction getSvgContents() {\r\n  return new XMLSerializer().serializeToString(getStrippedSvg());\r\n}\r\n\r\nasync function getSvgContentsWithInlinedImages() {\r\n  const svg = getStrippedSvg();\r\n  await inlineImages(svg);\r\n  return new XMLSerializer().serializeToString(svg);\r\n}\r\n\r\n/** Shows the print dialog to print the currently displayed chart. */\r\nexport function printChart() {\r\n  const printWindow = document.createElement('iframe');\r\n  printWindow.style.position = 'absolute';\r\n  printWindow.style.top = '-1000px';\r\n  printWindow.style.left = '-1000px';\r\n  printWindow.onload = () => {\r\n    printWindow.contentDocument!.open();\r\n    printWindow.contentDocument!.write(getSvgContents());\r\n    printWindow.contentDocument!.close();\r\n    // Doesn't work on Firefox without the setTimeout.\r\n    setTimeout(() => {\r\n      printWindow.contentWindow!.focus();\r\n      printWindow.contentWindow!.print();\r\n      printWindow.parentNode!.removeChild(printWindow);\r\n    }, 500);\r\n  };\r\n  document.body.appendChild(printWindow);\r\n}\r\n\r\nexport async function downloadSvg() {\r\n  const contents = await getSvgContentsWithInlinedImages();\r\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\r\n  saveAs(blob, 'topola.svg');\r\n}\r\n\r\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\r\n  const contents = await getSvgContentsWithInlinedImages();\r\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\r\n  return drawImageOnCanvas(await loadImage(blob));\r\n}\r\n\r\nexport async function downloadPng() {\r\n  const canvas = await drawOnCanvas();\r\n  const blob = await canvasToBlob(canvas, 'image/png');\r\n  saveAs(blob, 'topola.png');\r\n}\r\n\r\nexport async function downloadPdf() {\r\n  // Lazy load jspdf.\r\n  const {default: jspdf} = await import('jspdf');\r\n  const canvas = await drawOnCanvas();\r\n  const doc = new jspdf({\r\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\r\n    unit: 'pt',\r\n    format: [canvas.width, canvas.height],\r\n  });\r\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\r\n  doc.save('topola.pdf');\r\n}\r\n\r\n/** Supported chart types. */\r\nexport enum ChartType {\r\n  Hourglass,\r\n  Relatives,\r\n  Fancy,\r\n}\r\n\r\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\r\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\r\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\r\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\r\n]);\r\n\r\nfunction getChartType(chartType: ChartType) {\r\n  switch (chartType) {\r\n    case ChartType.Hourglass:\r\n      return HourglassChart;\r\n    case ChartType.Relatives:\r\n      return RelativesChart;\r\n    case ChartType.Fancy:\r\n      return FancyChart;\r\n    default:\r\n      // Fall back to hourglass chart.\r\n      return HourglassChart;\r\n  }\r\n}\r\n\r\nfunction getRendererType(chartType: ChartType) {\r\n  switch (chartType) {\r\n    case ChartType.Fancy:\r\n      return CircleRenderer;\r\n    default:\r\n      // Use DetailedRenderer by default.\r\n      return DetailedRenderer;\r\n  }\r\n}\r\n\r\nexport interface ChartProps {\r\n  data: JsonGedcomData;\r\n  selection: IndiInfo;\r\n  chartType: ChartType;\r\n  onSelection: (indiInfo: IndiInfo) => void;\r\n  freezeAnimation?: boolean;\r\n  colors?: ChartColors;\r\n  hideIds?: Ids;\r\n  hideSex?: Sex;\r\n}\r\n\r\nclass ChartWrapper {\r\n  private chart?: ChartHandle;\r\n  /** Animation is in progress. */\r\n  private animating = false;\r\n  /** Rendering is required after the current animation finishes. */\r\n  private rerenderRequired = false;\r\n  /** The d3 zoom behavior object. */\r\n  private zoomBehavior?: ZoomBehavior<Element, any>;\r\n  /** Props that will be used for rerendering. */\r\n  private rerenderProps?: ChartProps;\r\n  private rerenderResetPosition?: boolean;\r\n\r\n  zoom(factor: number) {\r\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\r\n    this.zoomBehavior!.scaleBy(parent, factor);\r\n  }\r\n\r\n  /**\r\n   * Renders the chart or performs a transition animation to a new state.\r\n   * If indiInfo is not given, it means that it is the initial render and no\r\n   * animation is performed.\r\n   */\r\n  renderChart(\r\n    props: ChartProps,\r\n    intl: IntlShape,\r\n    args: {initialRender: boolean; resetPosition: boolean} = {\r\n      initialRender: false,\r\n      resetPosition: false,\r\n    },\r\n  ) {\r\n    // Wait for animation to finish if animation is in progress.\r\n    if (!args.initialRender && this.animating) {\r\n      this.rerenderRequired = true;\r\n      this.rerenderProps = props;\r\n      this.rerenderResetPosition = args.resetPosition;\r\n      return;\r\n    }\r\n\r\n    // Freeze changing selection after initial rendering.\r\n    if (!args.initialRender && props.freezeAnimation) {\r\n      return;\r\n    }\r\n\r\n    if (args.initialRender) {\r\n      (select('#chart').node() as HTMLElement).innerHTML = '';\r\n      this.chart = createChart({\r\n        json: props.data,\r\n        chartType: getChartType(props.chartType),\r\n        renderer: getRendererType(props.chartType),\r\n        svgSelector: '#chart',\r\n        indiCallback: (info) => props.onSelection(info),\r\n        colors: chartColors.get(props.colors!),\r\n        animate: true,\r\n        updateSvgSize: false,\r\n        locale: intl.locale,\r\n      });\r\n    } else {\r\n      this.chart!.setData(props.data);\r\n    }\r\n    const chartInfo = this.chart!.render({\r\n      startIndi: props.selection.id,\r\n      baseGeneration: props.selection.generation,\r\n    });\r\n    const svg = select('#chartSvg');\r\n    const parent = select('#svgContainer').node() as Element;\r\n\r\n    const scale = zoomTransform(parent).k;\r\n    const zoomOutFactor = min([\r\n      1,\r\n      scale,\r\n      parent.clientWidth / chartInfo.size[0],\r\n      parent.clientHeight / chartInfo.size[1],\r\n    ])!;\r\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\r\n\r\n    this.zoomBehavior = zoom()\r\n      .scaleExtent(extent)\r\n      .translateExtent([[0, 0], chartInfo.size])\r\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\r\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\r\n\r\n    const scrollTopTween = (scrollTop: number) => {\r\n      return () => {\r\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\r\n        return (t: number) => {\r\n          parent.scrollTop = i(t);\r\n        };\r\n      };\r\n    };\r\n    const scrollLeftTween = (scrollLeft: number) => {\r\n      return () => {\r\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\r\n        return (t: number) => {\r\n          parent.scrollLeft = i(t);\r\n        };\r\n      };\r\n    };\r\n\r\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\r\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\r\n    const offsetX = max([\r\n      0,\r\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\r\n    ]);\r\n    const offsetY = max([\r\n      0,\r\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\r\n    ]);\r\n    const svgTransition = svg.transition().delay(200).duration(500);\r\n    const transition = args.initialRender ? svg : svgTransition;\r\n    transition\r\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\r\n      .attr('width', chartInfo.size[0] * scale)\r\n      .attr('height', chartInfo.size[1] * scale);\r\n    if (args.resetPosition) {\r\n      if (args.initialRender) {\r\n        parent.scrollLeft = -dx;\r\n        parent.scrollTop = -dy;\r\n      } else {\r\n        svgTransition\r\n          .tween('scrollLeft', scrollLeftTween(-dx))\r\n          .tween('scrollTop', scrollTopTween(-dy));\r\n      }\r\n    }\r\n\r\n    // After the animation is finished, rerender the chart if required.\r\n    this.animating = true;\r\n    chartInfo.animationPromise.then(() => {\r\n      this.animating = false;\r\n      if (this.rerenderRequired) {\r\n        this.rerenderRequired = false;\r\n        // Use `this.rerenderProps` instead of the props in scope because\r\n        // the props may have been updated in the meantime.\r\n        this.renderChart(this.rerenderProps!, intl, {\r\n          initialRender: false,\r\n          resetPosition: !!this.rerenderResetPosition,\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction usePrevious<T>(value: T): T | undefined {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport function Chart(props: ChartProps) {\r\n  const chartWrapper = useRef(new ChartWrapper());\r\n  const prevProps = usePrevious(props);\r\n  const intl = useIntl();\r\n\r\n  useEffect(() => {\r\n    if (prevProps) {\r\n      const initialRender =\r\n        props.chartType !== prevProps?.chartType ||\r\n        props.colors !== prevProps?.colors ||\r\n        props.hideIds !== prevProps?.hideIds ||\r\n        props.hideSex !== prevProps?.hideSex;\r\n      const resetPosition =\r\n        props.chartType !== prevProps?.chartType ||\r\n        props.data !== prevProps.data ||\r\n        props.selection !== prevProps.selection;\r\n      chartWrapper.current.renderChart(props, intl, {\r\n        initialRender,\r\n        resetPosition,\r\n      });\r\n    } else {\r\n      chartWrapper.current.renderChart(props, intl, {\r\n        initialRender: true,\r\n        resetPosition: true,\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div id=\"svgContainer\">\r\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\r\n        <button\r\n          className=\"zoom-in\"\r\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          className=\"zoom-out\"\r\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\r\n        >\r\n          −\r\n        </button>\r\n      </Media>\r\n      <svg id=\"chartSvg\">\r\n        <g id=\"chart\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import {analyticsEvent} from '../util/analytics';\r\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\r\nimport {\r\n  Date,\r\n  DateOrRange,\r\n  JsonEvent,\r\n  JsonFam,\r\n  JsonGedcomData,\r\n  JsonImage,\r\n  JsonIndi,\r\n} from 'topola';\r\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\r\nimport {GedcomEntry} from 'parse-gedcom';\r\nimport {IntlShape} from 'react-intl';\r\nimport {TopolaError} from '../util/error';\r\nimport {isValidDateOrRange} from '../util/date_util';\r\nimport {StringUtils} from 'turbocommons-ts';\r\nimport {\r\n  getAncestors as getAncestorsApi,\r\n  getRelatives as getRelativesApi,\r\n  clientLogin,\r\n  getLoggedInUserName,\r\n  Person,\r\n} from 'wikitree-js';\r\n\r\nconst WIKITREE_APP_ID = 'topola-viewer';\r\n\r\n/** Prefix for IDs of private individuals. */\r\nexport const PRIVATE_ID_PREFIX = '~Private';\r\n\r\n/** Gets item from session storage. Logs exception if one is thrown. */\r\nfunction getSessionStorageItem(key: string): string | null {\r\n  try {\r\n    return sessionStorage.getItem(key);\r\n  } catch (e) {\r\n    console.warn('Failed to load data from session storage: ' + e);\r\n  }\r\n  return null;\r\n}\r\n\r\n/** Sets item in session storage. Logs exception if one is thrown. */\r\nfunction setSessionStorageItem(key: string, value: string) {\r\n  try {\r\n    sessionStorage.setItem(key, value);\r\n  } catch (e) {\r\n    console.warn('Failed to store data in session storage: ' + e);\r\n  }\r\n}\r\n\r\nfunction getApiOptions(handleCors: boolean) {\r\n  return Object.assign(\r\n    {appId: WIKITREE_APP_ID},\r\n    handleCors\r\n      ? {\r\n          apiUrl:\r\n            'https://topolaproxy.bieda.it/https://api.wikitree.com/api.php',\r\n        }\r\n      : {},\r\n  );\r\n}\r\n\r\n/**\r\n * Retrieves ancestors from WikiTree for the given person ID.\r\n * Uses sessionStorage for caching responses.\r\n */\r\nasync function getAncestors(\r\n  key: string,\r\n  handleCors: boolean,\r\n): Promise<Person[]> {\r\n  const cacheKey = `wikitree:ancestors:${key}`;\r\n  const cachedData = getSessionStorageItem(cacheKey);\r\n  if (cachedData) {\r\n    return JSON.parse(cachedData);\r\n  }\r\n  const result = await getAncestorsApi(key, {}, getApiOptions(handleCors));\r\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\r\n  return result;\r\n}\r\n\r\n/**\r\n * Retrieves relatives from WikiTree for the given array of person IDs.\r\n * Uses sessionStorage for caching responses.\r\n */\r\nasync function getRelatives(\r\n  keys: string[],\r\n  handleCors: boolean,\r\n): Promise<Person[]> {\r\n  const result: Person[] = [];\r\n  const keysToFetch: string[] = [];\r\n  keys.forEach((key) => {\r\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\r\n    if (cachedData) {\r\n      result.push(JSON.parse(cachedData));\r\n    } else {\r\n      keysToFetch.push(key);\r\n    }\r\n  });\r\n  if (keysToFetch.length === 0) {\r\n    return result;\r\n  }\r\n  const response = await getRelativesApi(\r\n    keysToFetch,\r\n    {getChildren: true, getSpouses: true},\r\n    getApiOptions(handleCors),\r\n  );\r\n  if (!response) {\r\n    const id = keysToFetch[0];\r\n    throw new TopolaError(\r\n      'WIKITREE_PROFILE_NOT_FOUND',\r\n      `WikiTree profile ${id} not found`,\r\n      {id},\r\n    );\r\n  }\r\n  response.forEach((person) => {\r\n    setSessionStorageItem(\r\n      `wikitree:relatives:${person.Name}`,\r\n      JSON.stringify(person),\r\n    );\r\n  });\r\n  return result.concat(response);\r\n}\r\n\r\nasync function logInIfNeeded(\r\n  authcode: string | undefined,\r\n  handleCors: boolean,\r\n) {\r\n  if (!handleCors && !getLoggedInUserName() && authcode) {\r\n    const loginResult = await clientLogin(authcode, {appId: WIKITREE_APP_ID});\r\n    if (loginResult.result === 'Success') {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n}\r\n\r\nasync function getFirstPerson(key: string, handleCors: boolean) {\r\n  const person = (await getRelatives([key], handleCors))[0];\r\n  if (!person?.Name) {\r\n    const id = key;\r\n    throw new TopolaError(\r\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\r\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\r\n      {id},\r\n    );\r\n  }\r\n  return person;\r\n}\r\n\r\nfunction getSpouseKeys(person: Person) {\r\n  return Object.values(person.Spouses || {}).map((s) => s.Name);\r\n}\r\n\r\nasync function getAllAncestors(keys: string[], handleCors: boolean) {\r\n  const ancestors = await Promise.all(\r\n    keys.map((key) => getAncestors(key, handleCors)),\r\n  );\r\n  const ancestorKeys = ancestors\r\n    .flat()\r\n    .map((person) => person.Name)\r\n    .filter((key) => !!key);\r\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\r\n\r\n  // Map from person id to father id if the father profile is private.\r\n  const privateFathers: Map<number, number> = new Map();\r\n  // Map from person id to mother id if the mother profile is private.\r\n  const privateMothers: Map<number, number> = new Map();\r\n\r\n  // Andujst private individual ids so that there are no collisions in the case\r\n  // that ancestors were collected for more than one person.\r\n  ancestors.forEach((ancestorList, index) => {\r\n    const offset = 1000 * index;\r\n    // Adjust ids by offset.\r\n    ancestorList.forEach((person) => {\r\n      if (person.Id < 0) {\r\n        person.Id -= offset;\r\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\r\n      }\r\n      if (person.Father < 0) {\r\n        person.Father -= offset;\r\n        privateFathers.set(person.Id, person.Father);\r\n      }\r\n      if (person.Mother < 0) {\r\n        person.Mother -= offset;\r\n        privateMothers.set(person.Id, person.Mother);\r\n      }\r\n    });\r\n  });\r\n\r\n  // Set the Father and Mother fields again because getRelatives doesn't return\r\n  // private parents.\r\n  ancestorDetails.forEach((person) => {\r\n    const privateFather = privateFathers.get(person.Id);\r\n    if (privateFather) {\r\n      person.Father = privateFather;\r\n    }\r\n    const privateMother = privateMothers.get(person.Id);\r\n    if (privateMother) {\r\n      person.Mother = privateMother;\r\n    }\r\n  });\r\n\r\n  // Collect private individuals.\r\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\r\n\r\n  return ancestorDetails.concat(privateAncestors);\r\n}\r\n\r\nasync function getAllDescendants(key: string, handleCors: boolean) {\r\n  const everyone: Person[] = [];\r\n\r\n  // Limit the number of generations of descendants because there may be tens of\r\n  // generations for some profiles.\r\n  const descendantGenerationLimit = 5;\r\n\r\n  // Fetch descendants recursively.\r\n  let toFetch = [key];\r\n  let generation = 0;\r\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\r\n    const people = await getRelatives(toFetch, handleCors);\r\n    everyone.push(...people);\r\n    const allSpouses = people.flatMap((person) =>\r\n      Object.values(person.Spouses || {}),\r\n    );\r\n    everyone.push(...allSpouses);\r\n    // Fetch all children.\r\n    toFetch = people.flatMap((person) =>\r\n      Object.values(person.Children || {}).map((c) => c.Name),\r\n    );\r\n    generation++;\r\n  }\r\n  return everyone;\r\n}\r\n\r\nasync function loadData(key: string, authcode?: string) {\r\n  // Work around CORS if not in apps.wikitree.com domain.\r\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\r\n\r\n  await logInIfNeeded(authcode, handleCors);\r\n\r\n  const firstPerson = await getFirstPerson(key, handleCors);\r\n  const spouseKeys = getSpouseKeys(firstPerson);\r\n\r\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\r\n  const allAncestors = getAllAncestors([key].concat(spouseKeys), handleCors);\r\n  // Fetch descendants and their spouses.\r\n  const allDescendants = getAllDescendants(key, handleCors);\r\n\r\n  const everyone: Person[] = [\r\n    ...(await allAncestors),\r\n    ...(await allDescendants),\r\n  ];\r\n  // Make sure the list contains unique elements.\r\n  return Array.from(\r\n    new Map(everyone.map((person) => [person.Id, person])).values(),\r\n  );\r\n}\r\n\r\nfunction getFamilies(people: Person[]) {\r\n  // Map from person id to the set of families where they are a spouse.\r\n  const families = new Map<number, Set<string>>();\r\n  people.forEach((person) => {\r\n    if (person.Mother || person.Father) {\r\n      const famId = getFamilyId(person.Mother, person.Father);\r\n      getSet(families, person.Mother).add(famId);\r\n      getSet(families, person.Father).add(famId);\r\n    }\r\n    if (person.Spouses) {\r\n      Object.values(person.Spouses).forEach((spouse) => {\r\n        const famId = getFamilyId(person.Id, spouse.Id);\r\n        getSet(families, person.Id).add(famId);\r\n        getSet(families, spouse.Id).add(famId);\r\n      });\r\n    }\r\n  });\r\n  return families;\r\n}\r\n\r\nfunction getChildren(people: Person[]) {\r\n  // Map from family id to the set of children.\r\n  const children = new Map<string, Set<number>>();\r\n\r\n  people.forEach((person) => {\r\n    if (person.Mother || person.Father) {\r\n      const famId = getFamilyId(person.Mother, person.Father);\r\n      getSet(children, famId).add(person.Id);\r\n    }\r\n  });\r\n  return children;\r\n}\r\n\r\nfunction getSpouses(people: Person[]) {\r\n  // Map from famliy id to the spouses.\r\n  const spouses = new Map<\r\n    string,\r\n    {wife?: number; husband?: number; spouse?: Person}\r\n  >();\r\n\r\n  people.forEach((person) => {\r\n    if (person.Mother || person.Father) {\r\n      const famId = getFamilyId(person.Mother, person.Father);\r\n      spouses.set(famId, {\r\n        wife: person.Mother || undefined,\r\n        husband: person.Father || undefined,\r\n      });\r\n    }\r\n    if (person.Spouses) {\r\n      Object.values(person.Spouses).forEach((spouse) => {\r\n        const famId = getFamilyId(person.Id, spouse.Id);\r\n        const familySpouses =\r\n          person.Gender === 'Male'\r\n            ? {wife: spouse.Id, husband: person.Id, spouse}\r\n            : {wife: person.Id, husband: spouse.Id, spouse};\r\n        spouses.set(famId, familySpouses);\r\n      });\r\n    }\r\n  });\r\n  return spouses;\r\n}\r\n\r\nfunction convertIndis(people: Person[], intl: IntlShape) {\r\n  const families = getFamilies(people);\r\n  return people.map((person) => {\r\n    const indi = convertPerson(person, intl);\r\n    indi.fams = Array.from(getSet(families, person.Id));\r\n    return indi;\r\n  });\r\n}\r\n\r\nfunction convertFams(people: Person[]) {\r\n  // Map from numerical id to human-readable id.\r\n  const idToName = new Map(people.map((person) => [person.Id, person.Name]));\r\n  const children = getChildren(people);\r\n  const spouses = getSpouses(people);\r\n  return Array.from(spouses.entries()).map(([key, value]) => {\r\n    const fam: JsonFam = {\r\n      id: key,\r\n    };\r\n    const wife = value.wife && idToName.get(value.wife);\r\n    if (wife) {\r\n      fam.wife = wife;\r\n    }\r\n    const husband = value.husband && idToName.get(value.husband);\r\n    if (husband) {\r\n      fam.husb = husband;\r\n    }\r\n    fam.children = Array.from(getSet(children, key)).map(\r\n      (child) => idToName.get(child)!,\r\n    );\r\n    if (\r\n      value.spouse &&\r\n      ((value.spouse.marriage_date &&\r\n        value.spouse.marriage_date !== '0000-00-00') ||\r\n        value.spouse.marriage_location)\r\n    ) {\r\n      const parsedDate = parseDate(value.spouse.marriage_date);\r\n      fam.marriage = Object.assign({}, parsedDate, {\r\n        place: value.spouse.marriage_location,\r\n      });\r\n    }\r\n    return fam;\r\n  });\r\n}\r\n\r\nexport async function loadWikiTree(\r\n  key: string,\r\n  intl: IntlShape,\r\n  authcode?: string,\r\n): Promise<TopolaData> {\r\n  const everyone = await loadData(key, authcode);\r\n\r\n  const indis = convertIndis(everyone, intl);\r\n  const fams = convertFams(everyone);\r\n  const chartData = normalizeGedcom({indis, fams});\r\n\r\n  //Map from human-readable person id to person names\r\n  const personNames = new Map(\r\n    everyone.map((person) => [person.Name, convertPersonNames(person)]),\r\n  );\r\n  // Map from human-readable person id to fullSizeUrl of person photo.\r\n  const fullSizePhotoUrls = new Map(\r\n    everyone\r\n      .filter((person) => person.PhotoData?.path)\r\n      .map((person) => [\r\n        person.Name,\r\n        `https://www.wikitree.com${person.PhotoData!.path}`,\r\n      ]),\r\n  );\r\n  const gedcom = buildGedcom(chartData, fullSizePhotoUrls, personNames);\r\n\r\n  return {chartData, gedcom};\r\n}\r\n\r\n/** Creates a family identifier given 2 spouse identifiers. */\r\nfunction getFamilyId(spouse1: number, spouse2: number) {\r\n  if (spouse2 > spouse1) {\r\n    return `${spouse1}_${spouse2}`;\r\n  }\r\n  return `${spouse2}_${spouse1}`;\r\n}\r\n\r\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\r\n  const indi: JsonIndi = {\r\n    id: person.Name,\r\n  };\r\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\r\n    indi.hideId = true;\r\n    indi.firstName = intl.formatMessage({\r\n      id: 'wikitree.private',\r\n      defaultMessage: 'Private',\r\n    });\r\n  }\r\n  if (person.FirstName && person.FirstName !== 'Unknown') {\r\n    indi.firstName = person.FirstName;\r\n  } else if (person.RealName && person.RealName !== 'Unknown') {\r\n    indi.firstName = person.RealName;\r\n  }\r\n  if (person.LastNameAtBirth !== 'Unknown') {\r\n    indi.lastName = person.LastNameAtBirth;\r\n  }\r\n  if (person.Mother || person.Father) {\r\n    indi.famc = getFamilyId(person.Mother, person.Father);\r\n  }\r\n  if (person.Gender === 'Male') {\r\n    indi.sex = 'M';\r\n  } else if (person.Gender === 'Female') {\r\n    indi.sex = 'F';\r\n  }\r\n  if (\r\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\r\n    person.BirthLocation ||\r\n    person.BirthDateDecade !== 'unknown'\r\n  ) {\r\n    const parsedDate = parseDate(\r\n      person.BirthDate,\r\n      (person.DataStatus && person.DataStatus.BirthDate) || undefined,\r\n    );\r\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\r\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\r\n  }\r\n  if (\r\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\r\n    person.DeathLocation ||\r\n    person.DeathDateDecade !== 'unknown'\r\n  ) {\r\n    const parsedDate = parseDate(\r\n      person.DeathDate,\r\n      (person.DataStatus && person.DataStatus.DeathDate) || undefined,\r\n    );\r\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\r\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\r\n  }\r\n  if (person.PhotoData) {\r\n    indi.images = [\r\n      {\r\n        url: `https://www.wikitree.com${person.PhotoData.url}`,\r\n        title: person.Photo,\r\n      },\r\n    ];\r\n  }\r\n  return indi;\r\n}\r\n\r\nfunction isSimilarName(name1: string, name2: string) {\r\n  return StringUtils.compareSimilarityPercent(name1, name2) >= 75;\r\n}\r\n\r\nfunction getMarriedName(person: Person) {\r\n  if (\r\n    !person.Spouses ||\r\n    person.LastNameCurrent === 'Unknown' ||\r\n    person.LastNameCurrent === person.LastNameAtBirth\r\n  ) {\r\n    return undefined;\r\n  }\r\n  const nameParts = person.LastNameCurrent.split(/[- ,]/);\r\n  // In some languages the same names can differ a bit between genders,\r\n  // so regular equals comparison cannot be used.\r\n  // To verify if spouse has the same name, person name is split to include\r\n  // people with double names, then there is a check if any name part is\r\n  // at least 75% similar to spouse name.\r\n  const matchingNames = Object.entries(person.Spouses)\r\n    .flatMap(([, spousePerson]) => spousePerson.LastNameAtBirth.split(/[- ,]/))\r\n    .some((spousePersonNamePart) =>\r\n      nameParts.some((personNamePart) =>\r\n        isSimilarName(spousePersonNamePart, personNamePart),\r\n      ),\r\n    );\r\n  return matchingNames ? person.LastNameCurrent : undefined;\r\n}\r\n\r\n/**\r\n * Resolve birth name, married name and aka name with following logic:\r\n * - birth name is always prioritized and is set if exists and is not unknown\r\n * - married name is based on LastNameCurrent and is set if it's different than\r\n *   birth name and one of the spouses has it as their birth name\r\n * - aka name is based on LastNameOther and is set if it's different than others\r\n */\r\nfunction convertPersonNames(person: Person) {\r\n  const birth =\r\n    person.LastNameAtBirth !== 'Unknown' ? person.LastNameAtBirth : undefined;\r\n  const married = getMarriedName(person);\r\n  const aka =\r\n    person.LastNameOther !== 'Unknown' &&\r\n    person.LastNameAtBirth !== person.LastNameOther &&\r\n    person.LastNameCurrent !== person.LastNameOther\r\n      ? person.LastNameOther\r\n      : undefined;\r\n  return {birth, married, aka};\r\n}\r\n\r\n/**\r\n * Parses a date in the format returned by WikiTree and converts in to\r\n * the format defined by Topola.\r\n */\r\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\r\n  if (!date) {\r\n    return undefined;\r\n  }\r\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\r\n  if (!matchedDate) {\r\n    return {date: {text: date}};\r\n  }\r\n  const parsedDate: Date = {};\r\n  if (matchedDate[1] !== '0000') {\r\n    parsedDate.year = ~~matchedDate[1];\r\n  }\r\n  if (matchedDate[2] !== '00') {\r\n    parsedDate.month = ~~matchedDate[2];\r\n  }\r\n  if (matchedDate[3] !== '00') {\r\n    parsedDate.day = ~~matchedDate[3];\r\n  }\r\n  if (dataStatus === 'after') {\r\n    return {dateRange: {from: parsedDate}};\r\n  }\r\n  if (dataStatus === 'before') {\r\n    return {dateRange: {to: parsedDate}};\r\n  }\r\n  if (dataStatus === 'guess') {\r\n    parsedDate.qualifier = 'abt';\r\n  }\r\n  return {date: parsedDate};\r\n}\r\n\r\nfunction parseDecade(decade: string): DateOrRange | undefined {\r\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\r\n}\r\n\r\nconst MONTHS = new Map<number, string>([\r\n  [1, 'JAN'],\r\n  [2, 'FEB'],\r\n  [3, 'MAR'],\r\n  [4, 'APR'],\r\n  [5, 'MAY'],\r\n  [6, 'JUN'],\r\n  [7, 'JUL'],\r\n  [8, 'AUG'],\r\n  [9, 'SEP'],\r\n  [10, 'OCT'],\r\n  [11, 'NOV'],\r\n  [12, 'DEC'],\r\n]);\r\n\r\nfunction dateToGedcom(date: Date): string {\r\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\r\n    .filter((x) => x !== undefined)\r\n    .join(' ');\r\n}\r\n\r\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\r\n  if (dateOrRange.date) {\r\n    return dateToGedcom(dateOrRange.date);\r\n  }\r\n  if (!dateOrRange.dateRange) {\r\n    return '';\r\n  }\r\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\r\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\r\n      dateOrRange.dateRange.to\r\n    }`;\r\n  }\r\n  if (dateOrRange.dateRange.from) {\r\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\r\n  }\r\n  if (dateOrRange.dateRange.to) {\r\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction nameToGedcom(type: string, firstName?: string, lastName?: string) {\r\n  return {\r\n    level: 1,\r\n    pointer: '',\r\n    tag: 'NAME',\r\n    data: `${firstName || ''} /${lastName || ''}/`,\r\n    tree: [\r\n      {\r\n        level: 2,\r\n        pointer: '',\r\n        tag: 'TYPE',\r\n        data: type,\r\n        tree: [],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\r\n  const result = [];\r\n  if (isValidDateOrRange(event)) {\r\n    result.push({\r\n      level: 2,\r\n      pointer: '',\r\n      tag: 'DATE',\r\n      data: dateOrRangeToGedcom(event),\r\n      tree: [],\r\n    });\r\n  }\r\n  if (event.place) {\r\n    result.push({\r\n      level: 2,\r\n      pointer: '',\r\n      tag: 'PLAC',\r\n      data: event.place,\r\n      tree: [],\r\n    });\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction imageToGedcom(\r\n  image: JsonImage,\r\n  fullSizePhotoUrl: string | undefined,\r\n): GedcomEntry[] {\r\n  return [\r\n    {\r\n      level: 2,\r\n      pointer: '',\r\n      tag: 'FILE',\r\n      data: fullSizePhotoUrl || image.url,\r\n      tree: [\r\n        {\r\n          level: 3,\r\n          pointer: '',\r\n          tag: 'FORM',\r\n          data: image.title?.split('.').pop() || '',\r\n          tree: [],\r\n        },\r\n        {\r\n          level: 3,\r\n          pointer: '',\r\n          tag: 'TITL',\r\n          data: image.title?.split('.')[0] || '',\r\n          tree: [],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n}\r\n\r\nfunction indiToGedcom(\r\n  indi: JsonIndi,\r\n  fullSizePhotoUrl: Map<string, string>,\r\n  personNames: {birth?: string; married?: string; aka?: string},\r\n): GedcomEntry {\r\n  // WikiTree URLs replace spaces with underscores.\r\n  const escapedId = indi.id.replace(/ /g, '_');\r\n  const record: GedcomEntry = {\r\n    level: 0,\r\n    pointer: `@${indi.id}@`,\r\n    tag: 'INDI',\r\n    data: '',\r\n    tree: [],\r\n  };\r\n\r\n  if (personNames.birth) {\r\n    record.tree.push(nameToGedcom('birth', indi.firstName, personNames.birth));\r\n  }\r\n  if (personNames.married) {\r\n    record.tree.push(\r\n      nameToGedcom('married', indi.firstName, personNames.married),\r\n    );\r\n  }\r\n  if (personNames.aka) {\r\n    record.tree.push(nameToGedcom('aka', indi.firstName, personNames.aka));\r\n  }\r\n\r\n  if (indi.birth) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'BIRT',\r\n      data: '',\r\n      tree: eventToGedcom(indi.birth),\r\n    });\r\n  }\r\n  if (indi.death) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'DEAT',\r\n      data: '',\r\n      tree: eventToGedcom(indi.death),\r\n    });\r\n  }\r\n  if (indi.famc) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'FAMC',\r\n      data: `@${indi.famc}@`,\r\n      tree: [],\r\n    });\r\n  }\r\n  (indi.fams || []).forEach((fams) =>\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'FAMS',\r\n      data: `@${fams}@`,\r\n      tree: [],\r\n    }),\r\n  );\r\n  if (!indi.id.startsWith('~')) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'WWW',\r\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\r\n      tree: [],\r\n    });\r\n  }\r\n  (indi.images || []).forEach((image) => {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'OBJE',\r\n      data: '',\r\n      tree: imageToGedcom(image, fullSizePhotoUrl.get(indi.id)),\r\n    });\r\n  });\r\n  return record;\r\n}\r\n\r\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\r\n  const record: GedcomEntry = {\r\n    level: 0,\r\n    pointer: `@${fam.id}@`,\r\n    tag: 'FAM',\r\n    data: '',\r\n    tree: [],\r\n  };\r\n  if (fam.wife) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'WIFE',\r\n      data: `@${fam.wife}@`,\r\n      tree: [],\r\n    });\r\n  }\r\n  if (fam.husb) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'HUSB',\r\n      data: `@${fam.husb}@`,\r\n      tree: [],\r\n    });\r\n  }\r\n  (fam.children || []).forEach((child) =>\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: child,\r\n      tag: 'CHILD',\r\n      data: '',\r\n      tree: [],\r\n    }),\r\n  );\r\n  if (fam.marriage) {\r\n    record.tree.push({\r\n      level: 1,\r\n      pointer: '',\r\n      tag: 'MARR',\r\n      data: '',\r\n      tree: eventToGedcom(fam.marriage),\r\n    });\r\n  }\r\n  return record;\r\n}\r\n\r\n/**\r\n * Creates a GEDCOM structure for the purpose of displaying the details\r\n * panel.\r\n */\r\nfunction buildGedcom(\r\n  data: JsonGedcomData,\r\n  fullSizePhotoUrls: Map<string, string>,\r\n  personNames: Map<string, {birth?: string; married?: string; aka?: string}>,\r\n): GedcomData {\r\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\r\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\r\n  data.indis.forEach((indi) => {\r\n    gedcomIndis[indi.id] = indiToGedcom(\r\n      indi,\r\n      fullSizePhotoUrls,\r\n      personNames.get(indi.id) || {},\r\n    );\r\n  });\r\n  data.fams.forEach((fam) => {\r\n    gedcomFams[fam.id] = famToGedcom(fam);\r\n  });\r\n\r\n  return {\r\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\r\n    indis: gedcomIndis,\r\n    fams: gedcomFams,\r\n    other: {},\r\n  };\r\n}\r\n\r\n/**\r\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\r\n * an empty set is added to the map.\r\n */\r\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\r\n  const set = map.get(key);\r\n  if (set) {\r\n    return set;\r\n  }\r\n  const newSet = new Set<V>();\r\n  map.set(key, newSet);\r\n  return newSet;\r\n}\r\n\r\nexport interface WikiTreeSourceSpec {\r\n  source: DataSourceEnum.WIKITREE;\r\n  authcode?: string;\r\n}\r\n\r\n/** Loading data from the WikiTree API. */\r\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\r\n  constructor(private intl: IntlShape) {}\r\n\r\n  isNewData(\r\n    newSource: SourceSelection<WikiTreeSourceSpec>,\r\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    if (!newSource.selection) {\r\n      return false;\r\n    }\r\n    if (oldSource.selection?.id === newSource.selection.id) {\r\n      // Selection unchanged -> don't reload.\r\n      return false;\r\n    }\r\n    if (\r\n      data &&\r\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\r\n    ) {\r\n      // New selection exists in current view -> animate instead of reloading.\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async loadData(\r\n    source: SourceSelection<WikiTreeSourceSpec>,\r\n  ): Promise<TopolaData> {\r\n    if (!source.selection) {\r\n      throw new TopolaError(\r\n        'WIKITREE_ID_NOT_PROVIDED',\r\n        'WikiTree id needs to be provided',\r\n      );\r\n    }\r\n    try {\r\n      const data = await loadWikiTree(\r\n        source.selection.id,\r\n        this.intl,\r\n        source.spec.authcode,\r\n      );\r\n      analyticsEvent('wikitree_loaded');\r\n      return data;\r\n    } catch (error) {\r\n      analyticsEvent('wikitree_error');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n","import * as H from 'history';\r\nimport * as queryString from 'query-string';\r\nimport {analyticsEvent} from './util/analytics';\r\nimport {Changelog} from './changelog';\r\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\r\nimport {Details} from './details/details';\r\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\r\nimport {FormattedMessage, useIntl} from 'react-intl';\r\nimport {getI18nMessage} from './util/error_i18n';\r\nimport {IndiInfo} from 'topola';\r\nimport {Intro} from './intro';\r\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\r\nimport {Media} from './util/media';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {TopBar} from './menu/top_bar';\r\nimport {TopolaData} from './util/gedcom_util';\r\nimport {useEffect, useState} from 'react';\r\nimport {useHistory, useLocation} from 'react-router';\r\nimport {idToIndiMap} from './util/gedcom_util';\r\nimport {\r\n  Chart,\r\n  ChartType,\r\n  downloadPdf,\r\n  downloadPng,\r\n  downloadSvg,\r\n  printChart,\r\n} from './chart';\r\nimport {\r\n  argsToConfig,\r\n  Config,\r\n  ConfigPanel,\r\n  configToArgs,\r\n  DEFALUT_CONFIG,\r\n  Ids,\r\n  Sex,\r\n} from './config';\r\nimport {\r\n  getSelection,\r\n  UploadSourceSpec,\r\n  UrlSourceSpec,\r\n  GedcomUrlDataSource,\r\n  UploadedDataSource,\r\n} from './datasource/load_data';\r\nimport {\r\n  loadWikiTree,\r\n  PRIVATE_ID_PREFIX,\r\n  WikiTreeDataSource,\r\n  WikiTreeSourceSpec,\r\n} from './datasource/wikitree';\r\n\r\n/**\r\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\r\n *\r\n * If this environment variable is provided, the viewer is switched to\r\n * single-tree mode without the option to load other data.\r\n */\r\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\r\n\r\n/** Shows an error message in the middle of the screen. */\r\nfunction ErrorMessage(props: {message?: string}) {\r\n  return (\r\n    <Message negative className=\"error\">\r\n      <Message.Header>\r\n        <FormattedMessage\r\n          id=\"error.failed_to_load_file\"\r\n          defaultMessage={'Failed to load file'}\r\n        />\r\n      </Message.Header>\r\n      <p>{props.message}</p>\r\n    </Message>\r\n  );\r\n}\r\n\r\ninterface ErrorPopupProps {\r\n  message?: string;\r\n  open: boolean;\r\n  onDismiss: () => void;\r\n}\r\n\r\n/**\r\n * Shows a dismissable error message in the bottom left corner of the screen.\r\n */\r\nfunction ErrorPopup(props: ErrorPopupProps) {\r\n  return (\r\n    <Portal open={props.open} onClose={props.onDismiss}>\r\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\r\n        <Message.Header>\r\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\r\n        </Message.Header>\r\n        <p>{props.message}</p>\r\n      </Message>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nenum AppState {\r\n  INITIAL,\r\n  LOADING,\r\n  ERROR,\r\n  SHOWING_CHART,\r\n  LOADING_MORE,\r\n}\r\n\r\ntype DataSourceSpec =\r\n  | UrlSourceSpec\r\n  | UploadSourceSpec\r\n  | WikiTreeSourceSpec\r\n  | EmbeddedSourceSpec;\r\n\r\n/**\r\n * Arguments passed to the application, primarily through URL parameters.\r\n * Non-optional arguments get populated with default values.\r\n */\r\ninterface Arguments {\r\n  sourceSpec?: DataSourceSpec;\r\n  selection?: IndiInfo;\r\n  chartType: ChartType;\r\n  standalone: boolean;\r\n  showWikiTreeMenus: boolean;\r\n  freezeAnimation: boolean;\r\n  showSidePanel: boolean;\r\n  config: Config;\r\n}\r\n\r\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery<string>) {\r\n  const value = search[name];\r\n  return typeof value === 'string' ? value : undefined;\r\n}\r\n\r\n/**\r\n * Retrieve arguments passed into the application through the URL and uploaded\r\n * data.\r\n */\r\nfunction getArguments(location: H.Location<any>): Arguments {\r\n  const search = queryString.parse(location.search);\r\n  const getParam = (name: string) => getParamFromSearch(name, search);\r\n\r\n  const view = getParam('view');\r\n  const chartTypes = new Map<string | undefined, ChartType>([\r\n    ['relatives', ChartType.Relatives],\r\n    ['fancy', ChartType.Fancy],\r\n  ]);\r\n\r\n  const hash = getParam('file');\r\n  const url = getParam('url');\r\n  const embedded = getParam('embedded') === 'true'; // False by default.\r\n  var sourceSpec: DataSourceSpec | undefined = undefined;\r\n  if (staticUrl) {\r\n    sourceSpec = {\r\n      source: DataSourceEnum.GEDCOM_URL,\r\n      url: staticUrl,\r\n      handleCors: false,\r\n    };\r\n  } else if (getParam('source') === 'wikitree') {\r\n    const windowSearch = queryString.parse(window.location.search);\r\n    sourceSpec = {\r\n      source: DataSourceEnum.WIKITREE,\r\n      authcode: getParam('authcode') || getParamFromSearch('authcode', windowSearch),\r\n    };\r\n  } else if (hash) {\r\n    sourceSpec = {\r\n      source: DataSourceEnum.UPLOADED,\r\n      hash,\r\n      gedcom: location.state && location.state.data,\r\n      images: location.state && location.state.images,\r\n    };\r\n  } else if (url) {\r\n    sourceSpec = {\r\n      source: DataSourceEnum.GEDCOM_URL,\r\n      url,\r\n      handleCors: getParam('handleCors') !== 'false', // True by default.\r\n    };\r\n  } else if (embedded) {\r\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\r\n  }\r\n\r\n  const indi = getParam('indi');\r\n  const parsedGen = Number(getParam('gen'));\r\n  const selection = indi\r\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\r\n    : undefined;\r\n\r\n  return {\r\n    sourceSpec,\r\n    selection,\r\n    // Hourglass is the default view.\r\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\r\n\r\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\r\n    standalone: getParam('standalone') !== 'false' && !embedded && !staticUrl,\r\n    showWikiTreeMenus: getParam('showWikiTreeMenus') !== 'false', // True by default.\r\n    freezeAnimation: getParam('freeze') === 'true', // False by default\r\n    config: argsToConfig(search),\r\n  };\r\n}\r\n\r\nexport function App() {\r\n  /** State of the application. */\r\n  const [state, setState] = useState<AppState>(AppState.INITIAL);\r\n  /** Loaded data. */\r\n  const [data, setData] = useState<TopolaData>();\r\n  /** Selected individual. */\r\n  const [selection, setSelection] = useState<IndiInfo>();\r\n  /** Error to display. */\r\n  const [error, setError] = useState<string>();\r\n  /** Whether the side panel is shown. */\r\n  const [showSidePanel, setShowSidePanel] = useState(false);\r\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\r\n  const [standalone, setStandalone] = useState(true);\r\n  /**\r\n   * Whether the app should display WikiTree-specific menus when showing data\r\n   * from WikiTree.\r\n   */\r\n  const [showWikiTreeMenus, setShowWikiTreeMenus] = useState(true);\r\n  /** Type of displayed chart. */\r\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\r\n  /** Whether to show the error popup. */\r\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\r\n  /** Specification of the source of the data. */\r\n  const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\r\n  /** Freeze animations after initial chart render. */\r\n  const [freezeAnimation, setFreezeAnimation] = useState(false);\r\n  const [config, setConfig] = useState(DEFALUT_CONFIG);\r\n\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  /** Sets the state with a new individual selection and chart type. */\r\n  function updateDisplay(newSelection: IndiInfo) {\r\n    if (\r\n      !selection ||\r\n      selection.id !== newSelection.id ||\r\n      selection!.generation !== newSelection.generation\r\n    ) {\r\n      setSelection(newSelection);\r\n    }\r\n  }\r\n\r\n  function toggleDetails(config: Config, data: TopolaData | undefined) {\r\n    if (data === undefined) {\r\n      return;\r\n    }\r\n    let shouldHideIds = config.id === Ids.HIDE;\r\n    let shouldHideSex = config.sex === Sex.HIDE;\r\n    let indiMap = idToIndiMap(data.chartData);\r\n    indiMap.forEach((indi) => {\r\n      indi.hideId = shouldHideIds;\r\n      indi.hideSex = shouldHideSex;\r\n    });\r\n  }\r\n\r\n  /** Sets error message after data load failure. */\r\n  function setErrorMessage(message: string) {\r\n    setError(message);\r\n    setState(AppState.ERROR);\r\n  }\r\n\r\n  const uploadedDataSource = new UploadedDataSource();\r\n  const gedcomUrlDataSource = new GedcomUrlDataSource();\r\n  const wikiTreeDataSource = new WikiTreeDataSource(intl);\r\n  const embeddedDataSource = new EmbeddedDataSource();\r\n\r\n  function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\r\n    if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\r\n      // New data source means new data.\r\n      return true;\r\n    }\r\n    const newSource = {spec: newSourceSpec, selection: newSelection};\r\n    const oldSouce = {\r\n      spec: sourceSpec,\r\n      selection: selection,\r\n    };\r\n    switch (newSource.spec.source) {\r\n      case DataSourceEnum.UPLOADED:\r\n        return uploadedDataSource.isNewData(\r\n          newSource as SourceSelection<UploadSourceSpec>,\r\n          oldSouce as SourceSelection<UploadSourceSpec>,\r\n          data,\r\n        );\r\n      case DataSourceEnum.GEDCOM_URL:\r\n        return gedcomUrlDataSource.isNewData(\r\n          newSource as SourceSelection<UrlSourceSpec>,\r\n          oldSouce as SourceSelection<UrlSourceSpec>,\r\n          data,\r\n        );\r\n      case DataSourceEnum.WIKITREE:\r\n        return wikiTreeDataSource.isNewData(\r\n          newSource as SourceSelection<WikiTreeSourceSpec>,\r\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\r\n          data,\r\n        );\r\n      case DataSourceEnum.EMBEDDED:\r\n        return embeddedDataSource.isNewData(\r\n          newSource as SourceSelection<EmbeddedSourceSpec>,\r\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\r\n          data,\r\n        );\r\n    }\r\n  }\r\n\r\n  function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\r\n    switch (newSourceSpec.source) {\r\n      case DataSourceEnum.UPLOADED:\r\n        return uploadedDataSource.loadData({\r\n          spec: newSourceSpec,\r\n          selection: newSelection,\r\n        });\r\n      case DataSourceEnum.GEDCOM_URL:\r\n        return gedcomUrlDataSource.loadData({\r\n          spec: newSourceSpec,\r\n          selection: newSelection,\r\n        });\r\n      case DataSourceEnum.WIKITREE:\r\n        return wikiTreeDataSource.loadData({\r\n          spec: newSourceSpec,\r\n          selection: newSelection,\r\n        });\r\n      case DataSourceEnum.EMBEDDED:\r\n        return embeddedDataSource.loadData({\r\n          spec: newSourceSpec,\r\n          selection: newSelection,\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (location.pathname !== '/view') {\r\n        if (state !== AppState.INITIAL) {\r\n          setState(AppState.INITIAL);\r\n        }\r\n        return;\r\n      }\r\n\r\n      const args = getArguments(location);\r\n\r\n      if (!args.sourceSpec) {\r\n        history.replace({pathname: '/'});\r\n        return;\r\n      }\r\n\r\n      if (\r\n        state === AppState.INITIAL ||\r\n        isNewData(args.sourceSpec, args.selection)\r\n      ) {\r\n        // Set loading state.\r\n        setState(AppState.LOADING);\r\n        // Set state from URL parameters.\r\n        setSourceSpec(args.sourceSpec);\r\n        setSelection(args.selection);\r\n        setStandalone(args.standalone);\r\n        setShowWikiTreeMenus(args.showWikiTreeMenus);\r\n        setChartType(args.chartType);\r\n        setFreezeAnimation(args.freezeAnimation);\r\n        setConfig(args.config);\r\n        try {\r\n          const data = await loadData(args.sourceSpec, args.selection);\r\n          // Set state with data.\r\n          setData(data);\r\n          toggleDetails(args.config, data);\r\n          setShowSidePanel(args.showSidePanel);\r\n          setState(AppState.SHOWING_CHART);\r\n        } catch (error: any) {\r\n          setErrorMessage(getI18nMessage(error, intl));\r\n        }\r\n      } else if (\r\n        state === AppState.SHOWING_CHART ||\r\n        state === AppState.LOADING_MORE\r\n      ) {\r\n        // Update selection if it has changed in the URL.\r\n        const loadMoreFromWikitree =\r\n          args.sourceSpec.source === DataSourceEnum.WIKITREE &&\r\n          (!selection || selection.id !== args.selection?.id);\r\n        setChartType(args.chartType);\r\n        setState(\r\n          loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\r\n        );\r\n        updateDisplay(args.selection!);\r\n        if (loadMoreFromWikitree) {\r\n          try {\r\n            const data = await loadWikiTree(args.selection!.id, intl);\r\n            const newSelection = getSelection(data.chartData, args.selection);\r\n            setData(data);\r\n            setSelection(newSelection);\r\n            setState(AppState.SHOWING_CHART);\r\n          } catch (error: any) {\r\n            setState(AppState.SHOWING_CHART);\r\n            displayErrorPopup(\r\n              intl.formatMessage(\r\n                {\r\n                  id: 'error.failed_wikitree_load_more',\r\n                  defaultMessage: 'Failed to load data from WikiTree. {error}',\r\n                },\r\n                {error},\r\n              ),\r\n            );\r\n          }\r\n        }\r\n      }\r\n    })();\r\n  });\r\n\r\n  function updateUrl(args: queryString.ParsedQuery<any>) {\r\n    const search = queryString.parse(location.search);\r\n    for (const key in args) {\r\n      search[key] = args[key];\r\n    }\r\n    location.search = queryString.stringify(search);\r\n    history.push(location);\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks an individual box in the chart.\r\n   * Updates the browser URL.\r\n   */\r\n  function onSelection(selection: IndiInfo) {\r\n    // Don't allow selecting WikiTree private profiles.\r\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\r\n      return;\r\n    }\r\n    analyticsEvent('selection_changed');\r\n    updateUrl({\r\n      indi: selection.id,\r\n      gen: selection.generation,\r\n    });\r\n  }\r\n\r\n  function onPrint() {\r\n    analyticsEvent('print');\r\n    printChart();\r\n  }\r\n\r\n  function displayErrorPopup(message: string) {\r\n    setShowErrorPopup(true);\r\n    setError(message);\r\n  }\r\n\r\n  async function onDownloadPdf() {\r\n    analyticsEvent('download_pdf');\r\n    try {\r\n      await downloadPdf();\r\n    } catch (e) {\r\n      displayErrorPopup(\r\n        intl.formatMessage({\r\n          id: 'error.failed_pdf',\r\n          defaultMessage:\r\n            'Failed to generate PDF file.' +\r\n            ' Please try with a smaller diagram or download an SVG file.',\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  async function onDownloadPng() {\r\n    analyticsEvent('download_png');\r\n    try {\r\n      await downloadPng();\r\n    } catch (e) {\r\n      displayErrorPopup(\r\n        intl.formatMessage({\r\n          id: 'error.failed_png',\r\n          defaultMessage:\r\n            'Failed to generate PNG file.' +\r\n            ' Please try with a smaller diagram or download an SVG file.',\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  function onDownloadSvg() {\r\n    analyticsEvent('download_svg');\r\n    downloadSvg();\r\n  }\r\n\r\n  function onDismissErrorPopup() {\r\n    setShowErrorPopup(false);\r\n  }\r\n\r\n  function renderMainArea() {\r\n    switch (state) {\r\n      case AppState.SHOWING_CHART:\r\n      case AppState.LOADING_MORE:\r\n        const updatedSelection = getSelection(data!.chartData, selection);\r\n        const sidePanelTabs = [\r\n          {\r\n            menuItem: intl.formatMessage({\r\n              id: 'tab.info',\r\n              defaultMessage: 'Info',\r\n            }),\r\n            render: () => (\r\n              <Details gedcom={data!.gedcom} indi={updatedSelection.id} />\r\n            ),\r\n          },\r\n          {\r\n            menuItem: intl.formatMessage({\r\n              id: 'tab.settings',\r\n              defaultMessage: 'Settings',\r\n            }),\r\n            render: () => (\r\n              <ConfigPanel\r\n                config={config}\r\n                onChange={(config) => {\r\n                  setConfig(config);\r\n                  toggleDetails(config, data);\r\n                  updateUrl(configToArgs(config));\r\n                }}\r\n              />\r\n            ),\r\n          },\r\n        ];\r\n        return (\r\n          <div id=\"content\">\r\n            <ErrorPopup\r\n              open={showErrorPopup}\r\n              message={error}\r\n              onDismiss={onDismissErrorPopup}\r\n            />\r\n            {state === AppState.LOADING_MORE ? (\r\n              <Loader active size=\"small\" className=\"loading-more\" />\r\n            ) : null}\r\n            <Chart\r\n              data={data!.chartData}\r\n              selection={updatedSelection}\r\n              chartType={chartType}\r\n              onSelection={onSelection}\r\n              freezeAnimation={freezeAnimation}\r\n              colors={config.color}\r\n              hideIds={config.id}\r\n              hideSex={config.sex}\r\n            />\r\n            {showSidePanel ? (\r\n              <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\r\n                <Tab panes={sidePanelTabs} />\r\n              </Media>\r\n            ) : null}\r\n            <Changelog />\r\n          </div>\r\n        );\r\n\r\n      case AppState.ERROR:\r\n        return <ErrorMessage message={error!} />;\r\n\r\n      case AppState.INITIAL:\r\n      case AppState.LOADING:\r\n        return <Loader active size=\"large\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Route\r\n        render={() => (\r\n          <TopBar\r\n            data={data?.chartData}\r\n            allowAllRelativesChart={\r\n              sourceSpec?.source !== DataSourceEnum.WIKITREE\r\n            }\r\n            showingChart={\r\n              history.location.pathname === '/view' &&\r\n              (state === AppState.SHOWING_CHART ||\r\n                state === AppState.LOADING_MORE)\r\n            }\r\n            standalone={standalone}\r\n            eventHandlers={{\r\n              onSelection,\r\n              onPrint,\r\n              onDownloadPdf,\r\n              onDownloadPng,\r\n              onDownloadSvg,\r\n            }}\r\n            showWikiTreeMenus={\r\n              sourceSpec?.source === DataSourceEnum.WIKITREE &&\r\n              showWikiTreeMenus\r\n            }\r\n          />\r\n        )}\r\n      />\r\n      {staticUrl ? (\r\n        <Switch>\r\n          <Route exact path=\"/view\" render={renderMainArea} />\r\n          <Redirect to={'/view'} />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Intro} />\r\n          <Route exact path=\"/view\" render={renderMainArea} />\r\n          <Redirect to={'/'} />\r\n        </Switch>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport messages_cs from './translations/cs.json';\r\nimport messages_de from './translations/de.json';\r\nimport messages_fr from './translations/fr.json';\r\nimport messages_it from './translations/it.json';\r\nimport messages_pl from './translations/pl.json';\r\nimport messages_ru from './translations/ru.json';\r\nimport {App} from './app';\r\nimport {detect} from 'detect-browser';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport {IntlProvider} from 'react-intl';\r\nimport {MediaContextProvider, mediaStyles} from './util/media';\r\nimport './index.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'canvas-toBlob';\r\n\r\nconst messages = {\r\n  cs: messages_cs,\r\n  de: messages_de,\r\n  fr: messages_fr,\r\n  it: messages_it,\r\n  pl: messages_pl,\r\n  ru: messages_ru,\r\n};\r\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\r\n\r\nconst browser = detect();\r\n\r\nif (browser && browser.name === 'ie') {\r\n  ReactDOM.render(\r\n    <p>\r\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\r\n      different (modern) browser.\r\n    </p>,\r\n    document.querySelector('#root'),\r\n  );\r\n} else {\r\n  ReactDOM.render(\r\n    <IntlProvider locale={language} messages={messages[language]}>\r\n      <MediaContextProvider>\r\n        <style>{mediaStyles}</style>\r\n        <Router>\r\n          <Route component={App} />\r\n        </Router>\r\n      </MediaContextProvider>\r\n    </IntlProvider>,\r\n    document.querySelector('#root'),\r\n  );\r\n}\r\n","/** Error class adding an error code used for i18n. */\r\nexport class TopolaError extends Error {\r\n  constructor(\r\n    public readonly code: string,\r\n    message: string,\r\n    public readonly args: {[key: string]: string} = {},\r\n  ) {\r\n    super(message);\r\n  }\r\n}\r\n","import {analyticsEvent} from '../util/analytics';\r\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\r\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\r\nimport {IndiInfo, JsonGedcomData} from 'topola';\r\nimport {TopolaError} from '../util/error';\r\nimport AdmZip from 'adm-zip';\r\n\r\n/**\r\n * Returns a valid IndiInfo object, either with the given indi and generation\r\n * or with an individual taken from the data and generation 0.\r\n */\r\nexport function getSelection(\r\n  data: JsonGedcomData,\r\n  selection?: IndiInfo,\r\n): IndiInfo {\r\n  // If ID is not given or it doesn't exist in the data, use the first ID in\r\n  // the data.\r\n  const id =\r\n    selection && data.indis.some((i) => i.id === selection.id)\r\n      ? selection.id\r\n      : data.indis[0].id;\r\n  return {id, generation: selection?.generation || 0};\r\n}\r\n\r\nfunction prepareData(\r\n  gedcom: string,\r\n  cacheId: string,\r\n  images?: Map<string, string>,\r\n): TopolaData {\r\n  const data = convertGedcom(gedcom, images || new Map());\r\n  const serializedData = JSON.stringify(data);\r\n  try {\r\n    sessionStorage.setItem(cacheId, serializedData);\r\n  } catch (e) {\r\n    console.warn('Failed to store data in session storage: ' + e);\r\n  }\r\n  return data;\r\n}\r\n\r\nasync function loadGedzip(\r\n  blob: Blob,\r\n): Promise<{gedcom: string; images: Map<string, string>}> {\r\n  const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\r\n  const entries = zip.getEntries();\r\n\r\n  let gedcom = undefined;\r\n  const images = new Map<string, string>();\r\n  for (const entry of entries) {\r\n    if (entry.entryName.endsWith('.ged')) {\r\n      if (gedcom) {\r\n        console.warn('Multiple GEDCOM files found in zip archive.');\r\n      } else {\r\n        gedcom = entry.getData().toString();\r\n      }\r\n    } else {\r\n      // Save image for later.\r\n      images.set(\r\n        entry.entryName,\r\n        URL.createObjectURL(new Blob([entry.getData()])),\r\n      );\r\n    }\r\n  }\r\n  if (!gedcom) {\r\n    throw new Error('GEDCOM file not found in zip archive.');\r\n  }\r\n  return {gedcom, images};\r\n}\r\n\r\nexport async function loadFile(\r\n  blob: Blob,\r\n): Promise<{gedcom: string; images: Map<string, string>}> {\r\n  const fileHeader = await blob.slice(0, 2).text();\r\n  if (fileHeader === 'PK') {\r\n    return loadGedzip(blob);\r\n  }\r\n  return {gedcom: await blob.text(), images: new Map()};\r\n}\r\n\r\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\r\nexport async function loadFromUrl(\r\n  url: string,\r\n  handleCors: boolean,\r\n): Promise<TopolaData> {\r\n  try {\r\n    const cachedData = sessionStorage.getItem(url);\r\n    if (cachedData) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to load data from session storage: ' + e);\r\n  }\r\n\r\n  const driveUrlMatch1 = url.match(\r\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\r\n  );\r\n  if (driveUrlMatch1) {\r\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\r\n  }\r\n  const driveUrlMatch2 = url.match(\r\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\r\n  );\r\n  if (driveUrlMatch2) {\r\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\r\n  }\r\n\r\n  const urlToFetch = handleCors ? 'https://topolaproxy.bieda.it/' + url : url;\r\n\r\n  const response = await window.fetch(urlToFetch);\r\n  if (response.status !== 200) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  const {gedcom, images} = await loadFile(await response.blob());\r\n  return prepareData(gedcom, url, images);\r\n}\r\n\r\n/** Loads data from the given GEDCOM file contents. */\r\nexport async function loadGedcom(\r\n  hash: string,\r\n  gedcom?: string,\r\n  images?: Map<string, string>,\r\n): Promise<TopolaData> {\r\n  try {\r\n    const cachedData = sessionStorage.getItem(hash);\r\n    if (cachedData) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to load data from session storage: ' + e);\r\n  }\r\n  if (!gedcom) {\r\n    throw new TopolaError(\r\n      'ERROR_LOADING_UPLOADED_FILE',\r\n      'Error loading data. Please upload your file again.',\r\n    );\r\n  }\r\n  return prepareData(gedcom, hash, images);\r\n}\r\n\r\nexport interface UploadSourceSpec {\r\n  source: DataSourceEnum.UPLOADED;\r\n  gedcom?: string;\r\n  /** Hash of the GEDCOM contents. */\r\n  hash: string;\r\n  images?: Map<string, string>;\r\n}\r\n\r\n/** Files opened from the local computer. */\r\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\r\n  // isNewData(args: Arguments, state: State): boolean {\r\n  isNewData(\r\n    newSource: SourceSelection<UploadSourceSpec>,\r\n    oldSource: SourceSelection<UploadSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    return newSource.spec.hash !== oldSource.spec.hash;\r\n  }\r\n\r\n  async loadData(\r\n    source: SourceSelection<UploadSourceSpec>,\r\n  ): Promise<TopolaData> {\r\n    try {\r\n      const data = await loadGedcom(\r\n        source.spec.hash,\r\n        source.spec.gedcom,\r\n        source.spec.images,\r\n      );\r\n      const software = getSoftware(data.gedcom.head);\r\n      analyticsEvent('upload_file_loaded', {\r\n        event_label: software,\r\n        event_value: (source.spec.images && source.spec.images.size) || 0,\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      analyticsEvent('upload_file_error');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport interface UrlSourceSpec {\r\n  source: DataSourceEnum.GEDCOM_URL;\r\n  /** URL of the data that is loaded or is being loaded. */\r\n  url: string;\r\n  handleCors: boolean;\r\n}\r\n\r\n/** GEDCOM file loaded by pointing to a URL. */\r\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\r\n  isNewData(\r\n    newSource: SourceSelection<UrlSourceSpec>,\r\n    oldSource: SourceSelection<UrlSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    return newSource.spec.url !== oldSource.spec.url;\r\n  }\r\n\r\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\r\n    try {\r\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\r\n      const software = getSoftware(data.gedcom.head);\r\n      analyticsEvent('upload_file_loaded', {event_label: software});\r\n      return data;\r\n    } catch (error) {\r\n      analyticsEvent('url_file_error');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}